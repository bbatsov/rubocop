---
AllCops:
  RubyInterpreters:
  - ruby
  - macruby
  - rake
  - jruby
  - rbx
  Include:
  - "**/*.rb"
  - "**/*.arb"
  - "**/*.axlsx"
  - "**/*.builder"
  - "**/*.fcgi"
  - "**/*.gemfile"
  - "**/*.gemspec"
  - "**/*.god"
  - "**/*.jb"
  - "**/*.jbuilder"
  - "**/*.mspec"
  - "**/*.opal"
  - "**/*.pluginspec"
  - "**/*.podspec"
  - "**/*.rabl"
  - "**/*.rake"
  - "**/*.rbuild"
  - "**/*.rbw"
  - "**/*.rbx"
  - "**/*.ru"
  - "**/*.ruby"
  - "**/*.spec"
  - "**/*.thor"
  - "**/*.watchr"
  - "**/.irbrc"
  - "**/.pryrc"
  - "**/buildfile"
  - "**/Appraisals"
  - "**/Berksfile"
  - "**/Brewfile"
  - "**/Buildfile"
  - "**/Capfile"
  - "**/Cheffile"
  - "**/Dangerfile"
  - "**/Deliverfile"
  - "**/Fastfile"
  - "**/*Fastfile"
  - "**/Gemfile"
  - "**/Guardfile"
  - "**/Jarfile"
  - "**/Mavenfile"
  - "**/Podfile"
  - "**/Puppetfile"
  - "**/Rakefile"
  - "**/Snapfile"
  - "**/Thorfile"
  - "**/Vagabondfile"
  - "**/Vagrantfile"
  Exclude:
  - node_modules/**/*
  - vendor/**/*
  - ".git/**/*"
  DefaultFormatter: progress
  DisplayCopNames: true
  DisplayStyleGuide: false
  StyleGuideBaseURL: https://github.com/rubocop-hq/ruby-style-guide
  ExtraDetails: false
  StyleGuideCopsOnly: false
  EnabledByDefault: false
  DisabledByDefault: false
  UseCache: true
  MaxFilesInCache: 20000
  CacheRootDirectory:
  AllowSymlinksInCacheRootDirectory: false
  TargetRubyVersion:
  TargetRailsVersion:

Bundler/DuplicatedGem:
  Description: A Gem's requirements should be listed only once in a Gemfile.
  Enabled: true
  VersionAdded: '0.46'
  Include:
  - "**/*.gemfile"
  - "**/Gemfile"
  - "**/gems.rb"

Bundler/GemComment:
  Description: Add a comment describing each gem in your Gemfile.
  Enabled: false
  VersionAdded: '0.59'
  Include:
  - "**/*.gemfile"
  - "**/Gemfile"
  - "**/gems.rb"
  Whitelist: []

Bundler/InsecureProtocolSource:
  Description: |-
    The symbol argument `:gemcutter`, `:rubygems`, and `:rubyforge`
    are deprecated. So please change your source to URL string that
    'https://rubygems.org' if possible, or 'http://rubygems.org' if not.
  Enabled: true
  VersionAdded: '0.50'
  Include:
  - "**/*.gemfile"
  - "**/Gemfile"
  - "**/gems.rb"

Bundler/OrderedGems:
  Description: Gems should be alphabetically sorted within groups.
  Enabled: true
  VersionAdded: '0.46'
  VersionChanged: '0.47'
  TreatCommentsAsGroupSeparators: true
  Include:
  - "**/*.gemfile"
  - "**/Gemfile"
  - "**/gems.rb"

Gemspec/DuplicatedAssignment:
  Description: |-
    An attribute assignment method calls should be listed only once
    in a gemspec.
  Enabled: true
  VersionAdded: '0.52'
  Include:
  - "**/*.gemspec"

Gemspec/OrderedDependencies:
  Description: Dependencies in the gemspec should be alphabetically sorted.
  Enabled: true
  VersionAdded: '0.51'
  TreatCommentsAsGroupSeparators: true
  Include:
  - "**/*.gemspec"

Gemspec/RequiredRubyVersion:
  Description: |-
    Checks that `required_ruby_version` of gemspec and `TargetRubyVersion`
    of .rubocop.yml are equal.
    Thereby, RuboCop to perform static analysis working on the version
    required by gemspec.
  Enabled: true
  VersionAdded: '0.52'
  Include:
  - "**/*.gemspec"

Layout/AccessModifierIndentation:
  Description: |-
    Modifiers should be indented as deep as method definitions, or as deep
    as the class/module keyword, depending on configuration.
  StyleGuide: "#indent-public-private-protected"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: indent
  SupportedStyles:
  - outdent
  - indent
  IndentationWidth:

Layout/AlignArray:
  Description: |-
    Here we check if the elements of a multi-line array literal are
    aligned.
  StyleGuide: "#align-multiline-arrays"
  Enabled: true
  VersionAdded: '0.49'

Layout/AlignHash:
  Description: |-
    Check that the keys, separators, and values of a multi-line hash
    literal are aligned according to configuration. The configuration
    options are:
  Enabled: true
  VersionAdded: '0.49'
  EnforcedHashRocketStyle: key
  SupportedHashRocketStyles:
  - key
  - separator
  - table
  EnforcedColonStyle: key
  SupportedColonStyles:
  - key
  - separator
  - table
  EnforcedLastArgumentHashStyle: always_inspect
  SupportedLastArgumentHashStyles:
  - always_inspect
  - always_ignore
  - ignore_implicit
  - ignore_explicit

Layout/AlignParameters:
  Description: |-
    Here we check if the parameters on a multi-line method call or
    definition are aligned.
  StyleGuide: "#no-double-indent"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: with_first_parameter
  SupportedStyles:
  - with_first_parameter
  - with_fixed_indentation
  IndentationWidth:

Layout/BlockAlignment:
  Description: |-
    This cop checks whether the end keywords are aligned properly for do
    end blocks.
  Enabled: true
  VersionAdded: '0.53'
  EnforcedStyleAlignWith: either
  SupportedStylesAlignWith:
  - either
  - start_of_block
  - start_of_line

Layout/BlockEndNewline:
  Description: |-
    This cop checks whether the end statement of a do..end block
    is on its own line.
  Enabled: true
  VersionAdded: '0.49'

Layout/CaseIndentation:
  Description: |-
    This cop checks how the *when*s of a *case* expression
    are indented in relation to its *case* or *end* keyword.
  StyleGuide: "#indent-when-to-case"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: case
  SupportedStyles:
  - case
  - end
  IndentOneStep: false
  IndentationWidth:

Layout/ClassStructure:
  Description: 'Checks if the code style follows the ExpectedOrder configuration:'
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#consistent-classes
  Enabled: false
  VersionAdded: '0.52'
  Categories:
    module_inclusion:
    - include
    - prepend
    - extend
  ExpectedOrder:
  - module_inclusion
  - constants
  - public_class_methods
  - initializer
  - public_methods
  - protected_methods
  - private_methods

Layout/ClosingHeredocIndentation:
  Description: Checks the indentation of here document closings.
  Enabled: true
  VersionAdded: '0.57'

Layout/ClosingParenthesisIndentation:
  Description: |-
    This cop checks the indentation of hanging closing parentheses in
    method calls, method definitions, and grouped expressions. A hanging
    closing parenthesis means `)` preceded by a line break.
  Enabled: true
  VersionAdded: '0.49'

Layout/CommentIndentation:
  Description: This cop checks the indentation of comments.
  Enabled: true
  VersionAdded: '0.49'

Layout/ConditionPosition:
  Description: |-
    This cop checks for conditions that are not on the same line as
    if/while/until.
  StyleGuide: "#same-line-condition"
  Enabled: true
  VersionAdded: '0.53'

Layout/DefEndAlignment:
  Description: |-
    This cop checks whether the end keywords of method definitions are
    aligned properly.
  Enabled: true
  VersionAdded: '0.53'
  EnforcedStyleAlignWith: start_of_line
  SupportedStylesAlignWith:
  - start_of_line
  - def
  AutoCorrect: false
  Severity: warning

Layout/DotPosition:
  Description: This cop checks the . position in multi-line method calls.
  StyleGuide: "#consistent-multi-line-chains"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: leading
  SupportedStyles:
  - leading
  - trailing

Layout/ElseAlignment:
  Description: |-
    This cop checks the alignment of else keywords. Normally they should
    be aligned with an if/unless/while/until/begin/def keyword, but there
    are special cases when they should follow the same rules as the
    alignment of end.
  Enabled: true
  VersionAdded: '0.49'

Layout/EmptyComment:
  Description: This cop checks empty comment.
  Enabled: true
  VersionAdded: '0.53'
  AllowBorderComment: true
  AllowMarginComment: true

Layout/EmptyLineAfterGuardClause:
  Description: This cop enforces empty line after guard clause
  Enabled: true
  VersionAdded: '0.56'
  VersionChanged: '0.59'

Layout/EmptyLineAfterMagicComment:
  Description: Checks for a newline after the final magic comment.
  StyleGuide: "#separate-magic-comments-from-code"
  Enabled: true
  VersionAdded: '0.49'

Layout/EmptyLineBetweenDefs:
  Description: |-
    This cop checks whether method definitions are
    separated by one empty line.
  StyleGuide: "#empty-lines-between-methods"
  Enabled: true
  VersionAdded: '0.49'
  AllowAdjacentOneLineDefs: false
  NumberOfEmptyLines: 1

Layout/EmptyLines:
  Description: This cop checks for two or more consecutive blank lines.
  StyleGuide: "#two-or-more-empty-lines"
  Enabled: true
  VersionAdded: '0.49'

Layout/EmptyLinesAroundAccessModifier:
  Description: Access modifiers should be surrounded by blank lines.
  StyleGuide: "#empty-lines-around-access-modifier"
  Enabled: true
  VersionAdded: '0.49'

Layout/EmptyLinesAroundArguments:
  Description: |-
    This cop checks if empty lines exist around the arguments
    of a method invocation.
  Enabled: true
  VersionAdded: '0.52'

Layout/EmptyLinesAroundBeginBody:
  Description: |-
    This cop checks if empty lines exist around the bodies of begin-end
    blocks.
  StyleGuide: "#empty-lines-around-bodies"
  Enabled: true
  VersionAdded: '0.49'

Layout/EmptyLinesAroundBlockBody:
  Description: |-
    This cop checks if empty lines around the bodies of blocks match
    the configuration.
  StyleGuide: "#empty-lines-around-bodies"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: no_empty_lines
  SupportedStyles:
  - empty_lines
  - no_empty_lines

Layout/EmptyLinesAroundClassBody:
  Description: |-
    This cop checks if empty lines around the bodies of classes match
    the configuration.
  StyleGuide: "#empty-lines-around-bodies"
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '0.53'
  EnforcedStyle: no_empty_lines
  SupportedStyles:
  - empty_lines
  - empty_lines_except_namespace
  - empty_lines_special
  - no_empty_lines
  - beginning_only
  - ending_only

Layout/EmptyLinesAroundExceptionHandlingKeywords:
  Description: |-
    This cop checks if empty lines exist around the bodies of `begin`
    sections. This cop doesn't check empty lines at `begin` body
    beginning/end and around method definition body.
    `Style/EmptyLinesAroundBeginBody` or `Style/EmptyLinesAroundMethodBody`
    can be used for this purpose.
  StyleGuide: "#empty-lines-around-bodies"
  Enabled: true
  VersionAdded: '0.49'

Layout/EmptyLinesAroundMethodBody:
  Description: This cop checks if empty lines exist around the bodies of methods.
  StyleGuide: "#empty-lines-around-bodies"
  Enabled: true
  VersionAdded: '0.49'

Layout/EmptyLinesAroundModuleBody:
  Description: |-
    This cop checks if empty lines around the bodies of modules match
    the configuration.
  StyleGuide: "#empty-lines-around-bodies"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: no_empty_lines
  SupportedStyles:
  - empty_lines
  - empty_lines_except_namespace
  - empty_lines_special
  - no_empty_lines

Layout/EndAlignment:
  Description: This cop checks whether the end keywords are aligned properly.
  Enabled: true
  VersionAdded: '0.53'
  EnforcedStyleAlignWith: keyword
  SupportedStylesAlignWith:
  - keyword
  - variable
  - start_of_line
  AutoCorrect: false
  Severity: warning

Layout/EndOfLine:
  Description: This cop checks for Windows-style line endings in the source code.
  StyleGuide: "#crlf"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: native
  SupportedStyles:
  - native
  - lf
  - crlf

Layout/ExtraSpacing:
  Description: This cop checks for extra/unnecessary whitespace.
  Enabled: true
  VersionAdded: '0.49'
  AllowForAlignment: true
  ForceEqualSignAlignment: false

Layout/FirstArrayElementLineBreak:
  Description: |-
    This cop checks for a line break before the first element in a
    multi-line array.
  Enabled: false
  VersionAdded: '0.49'

Layout/FirstHashElementLineBreak:
  Description: |-
    This cop checks for a line break before the first element in a
    multi-line hash.
  Enabled: false
  VersionAdded: '0.49'

Layout/FirstMethodArgumentLineBreak:
  Description: |-
    This cop checks for a line break before the first argument in a
    multi-line method call.
  Enabled: false
  VersionAdded: '0.49'

Layout/FirstMethodParameterLineBreak:
  Description: |-
    This cop checks for a line break before the first parameter in a
    multi-line method parameter definition.
  Enabled: false
  VersionAdded: '0.49'

Layout/FirstParameterIndentation:
  Description: |-
    This cop checks the indentation of the first parameter in a method call.
    Parameters after the first one are checked by Layout/AlignParameters,
    not by this cop.
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '0.56'
  EnforcedStyle: special_for_inner_method_call_in_parentheses
  SupportedStyles:
  - consistent
  - consistent_relative_to_receiver
  - special_for_inner_method_call
  - special_for_inner_method_call_in_parentheses
  IndentationWidth:

Layout/IndentArray:
  Description: |-
    This cop checks the indentation of the first element in an array literal
    where the opening bracket and the first element are on separate lines.
    The other elements' indentations are handled by the AlignArray cop.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: special_inside_parentheses
  SupportedStyles:
  - special_inside_parentheses
  - consistent
  - align_brackets
  IndentationWidth:

Layout/IndentAssignment:
  Description: |-
    This cop checks the indentation of the first line of the
    right-hand-side of a multi-line assignment.
  Enabled: true
  VersionAdded: '0.49'
  IndentationWidth:

Layout/IndentHash:
  Description: |-
    This cop checks the indentation of the first key in a hash literal
    where the opening brace and the first key are on separate lines. The
    other keys' indentations are handled by the AlignHash cop.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: special_inside_parentheses
  SupportedStyles:
  - special_inside_parentheses
  - consistent
  - align_braces
  IndentationWidth:

Layout/IndentHeredoc:
  Description: |-
    This cop checks the indentation of the here document bodies. The bodies
    are indented one step.
    In Ruby 2.3 or newer, squiggly heredocs (`<<~`) should be used. If you
    use the older rubies, you should introduce some library to your project
    (e.g. ActiveSupport, Powerpack or Unindent).
    Note: When `Metrics/LineLength`'s `AllowHeredoc` is false (not default),
          this cop does not add any offenses for long here documents to
          avoid `Metrics/LineLength`'s offenses.
  StyleGuide: "#squiggly-heredocs"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: auto_detection
  SupportedStyles:
  - auto_detection
  - squiggly
  - active_support
  - powerpack
  - unindent

Layout/IndentationConsistency:
  Description: This cop checks for inconsistent indentation.
  StyleGuide: "#spaces-indentation"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: normal
  SupportedStyles:
  - normal
  - rails

Layout/IndentationWidth:
  Description: |-
    This cop checks for indentation that doesn't use the specified number
    of spaces.
  StyleGuide: "#spaces-indentation"
  Enabled: true
  VersionAdded: '0.49'
  Width: 2
  IgnoredPatterns: []

Layout/InitialIndentation:
  Description: |-
    This cop checks for indentation of the first non-blank non-comment
    line in a file.
  Enabled: true
  VersionAdded: '0.49'

Layout/LeadingBlankLines:
  Description: |-
    This cop checks for unnecessary leading blank lines at the beginning
    of a file.
  Enabled: true
  VersionAdded: '0.57'

Layout/LeadingCommentSpace:
  Description: |-
    This cop checks whether comments have a leading space after the
    `#` denoting the start of the comment. The leading space is not
    required for some RDoc special syntax, like `#++`, `#--`,
    `#:nodoc`, `=begin`- and `=end` comments, "shebang" directives,
    or rackup options.
  StyleGuide: "#hash-space"
  Enabled: true
  VersionAdded: '0.49'

Layout/MultilineArrayBraceLayout:
  Description: |-
    This cop checks that the closing brace in an array literal is either
    on the same line as the last array element or on a new line.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: symmetrical
  SupportedStyles:
  - symmetrical
  - new_line
  - same_line

Layout/MultilineAssignmentLayout:
  Description: |-
    This cop checks whether the multiline assignments have a newline
    after the assignment operator.
  StyleGuide: "#indent-conditional-assignment"
  Enabled: false
  VersionAdded: '0.49'
  SupportedTypes:
  - block
  - case
  - class
  - if
  - kwbegin
  - module
  EnforcedStyle: new_line
  SupportedStyles:
  - same_line
  - new_line

Layout/MultilineBlockLayout:
  Description: |-
    This cop checks whether the multiline do end blocks have a newline
    after the start of the block. Additionally, it checks whether the block
    arguments, if any, are on the same line as the start of the block.
  Enabled: true
  VersionAdded: '0.49'

Layout/MultilineHashBraceLayout:
  Description: |-
    This cop checks that the closing brace in a hash literal is either
    on the same line as the last hash element, or a new line.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: symmetrical
  SupportedStyles:
  - symmetrical
  - new_line
  - same_line

Layout/MultilineMethodCallBraceLayout:
  Description: |-
    This cop checks that the closing brace in a method call is either
    on the same line as the last method argument, or a new line.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: symmetrical
  SupportedStyles:
  - symmetrical
  - new_line
  - same_line

Layout/MultilineMethodCallIndentation:
  Description: |-
    This cop checks the indentation of the method name part in method calls
    that span more than one line.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: aligned
  SupportedStyles:
  - aligned
  - indented
  - indented_relative_to_receiver
  IndentationWidth:

Layout/MultilineMethodDefinitionBraceLayout:
  Description: |-
    This cop checks that the closing brace in a method definition is either
    on the same line as the last method parameter, or a new line.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: symmetrical
  SupportedStyles:
  - symmetrical
  - new_line
  - same_line

Layout/MultilineOperationIndentation:
  Description: |-
    This cop checks the indentation of the right hand side operand in
    binary operations that span more than one line.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: aligned
  SupportedStyles:
  - aligned
  - indented
  IndentationWidth:

Layout/RescueEnsureAlignment:
  Description: |-
    This cop checks whether the rescue and ensure keywords are aligned
    properly.
  Enabled: true
  VersionAdded: '0.49'

Layout/SpaceAfterColon:
  Description: |-
    Checks for colon (:) not followed by some kind of space.
    N.B. this cop does not handle spaces after a ternary operator, which are
    instead handled by Layout/SpaceAroundOperators.
  StyleGuide: "#spaces-operators"
  Enabled: true
  VersionAdded: '0.49'

Layout/SpaceAfterComma:
  Description: Checks for comma (,) not followed by some kind of space.
  StyleGuide: "#spaces-operators"
  Enabled: true
  VersionAdded: '0.49'

Layout/SpaceAfterMethodName:
  Description: Checks for space between a method name and a left parenthesis in defs.
  StyleGuide: "#parens-no-spaces"
  Enabled: true
  VersionAdded: '0.49'

Layout/SpaceAfterNot:
  Description: This cop checks for space after `!`.
  StyleGuide: "#no-space-bang"
  Enabled: true
  VersionAdded: '0.49'

Layout/SpaceAfterSemicolon:
  Description: Checks for semicolon (;) not followed by some kind of space.
  StyleGuide: "#spaces-operators"
  Enabled: true
  VersionAdded: '0.49'

Layout/SpaceAroundBlockParameters:
  Description: Checks the spacing inside and after block parameters pipes.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyleInsidePipes: no_space
  SupportedStylesInsidePipes:
  - space
  - no_space

Layout/SpaceAroundEqualsInParameterDefault:
  Description: |-
    Checks that the equals signs in parameter default assignments
    have or don't have surrounding space depending on configuration.
  StyleGuide: "#spaces-around-equals"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: space
  SupportedStyles:
  - space
  - no_space

Layout/SpaceAroundKeyword:
  Description: Checks the spacing around the keywords.
  Enabled: true
  VersionAdded: '0.49'

Layout/SpaceAroundOperators:
  Description: |-
    Checks that operators have space around them, except for **
    which should not have surrounding space.
  StyleGuide: "#spaces-operators"
  Enabled: true
  VersionAdded: '0.49'
  AllowForAlignment: true

Layout/SpaceBeforeBlockBraces:
  Description: |-
    Checks that block braces have or don't have a space before the opening
    brace depending on configuration.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: space
  SupportedStyles:
  - space
  - no_space
  EnforcedStyleForEmptyBraces: space
  SupportedStylesForEmptyBraces:
  - space
  - no_space
  VersionChanged: 0.52.1

Layout/SpaceBeforeComma:
  Description: Checks for comma (,) preceded by space.
  Enabled: true
  VersionAdded: '0.49'

Layout/SpaceBeforeComment:
  Description: |-
    This cop checks for missing space between a token and a comment on the
    same line.
  Enabled: true
  VersionAdded: '0.49'

Layout/SpaceBeforeFirstArg:
  Description: |-
    Checks that exactly one space is used between a method name and the
    first argument for method calls without parentheses.
  Enabled: true
  VersionAdded: '0.49'
  AllowForAlignment: true

Layout/SpaceBeforeSemicolon:
  Description: Checks for semicolon (;) preceded by space.
  Enabled: true
  VersionAdded: '0.49'

Layout/SpaceInLambdaLiteral:
  Description: |-
    This cop checks for spaces between `->` and opening parameter
    parenthesis (`(`) in lambda literals.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: require_no_space
  SupportedStyles:
  - require_no_space
  - require_space

Layout/SpaceInsideArrayLiteralBrackets:
  Description: |-
    Checks that brackets used for array literals have or don't have
    surrounding space depending on configuration.
  Enabled: true
  VersionAdded: '0.52'
  EnforcedStyle: no_space
  SupportedStyles:
  - space
  - no_space
  - compact
  EnforcedStyleForEmptyBrackets: no_space
  SupportedStylesForEmptyBrackets:
  - space
  - no_space

Layout/SpaceInsideArrayPercentLiteral:
  Description: |-
    Checks for unnecessary additional spaces inside array percent literals
    (i.e. %i/%w).
  Enabled: true
  VersionAdded: '0.49'

Layout/SpaceInsideBlockBraces:
  Description: |-
    Checks that block braces have or don't have surrounding space inside
    them on configuration. For blocks taking parameters, it checks that the
    left brace has or doesn't have trailing space depending on
    configuration.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: space
  SupportedStyles:
  - space
  - no_space
  EnforcedStyleForEmptyBraces: no_space
  SupportedStylesForEmptyBraces:
  - space
  - no_space
  SpaceBeforeBlockParameters: true

Layout/SpaceInsideHashLiteralBraces:
  Description: |-
    Checks that braces used for hash literals have or don't have
    surrounding space depending on configuration.
  StyleGuide: "#spaces-operators"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: space
  SupportedStyles:
  - space
  - no_space
  - compact
  EnforcedStyleForEmptyBraces: no_space
  SupportedStylesForEmptyBraces:
  - space
  - no_space

Layout/SpaceInsideParens:
  Description: Checks for spaces inside ordinary round parentheses.
  StyleGuide: "#spaces-braces"
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '0.55'
  EnforcedStyle: no_space
  SupportedStyles:
  - space
  - no_space

Layout/SpaceInsidePercentLiteralDelimiters:
  Description: |-
    Checks for unnecessary additional spaces inside the delimiters of
    %i/%w/%x literals.
  Enabled: true
  VersionAdded: '0.49'

Layout/SpaceInsideRangeLiteral:
  Description: Checks for spaces inside range literals.
  StyleGuide: "#no-space-inside-range-literals"
  Enabled: true
  VersionAdded: '0.49'

Layout/SpaceInsideReferenceBrackets:
  Description: |-
    Checks that reference brackets have or don't have
    surrounding space depending on configuration.
  Enabled: true
  VersionAdded: '0.52'
  VersionChanged: '0.53'
  EnforcedStyle: no_space
  SupportedStyles:
  - space
  - no_space
  EnforcedStyleForEmptyBrackets: no_space
  SupportedStylesForEmptyBrackets:
  - space
  - no_space

Layout/SpaceInsideStringInterpolation:
  Description: This cop checks for whitespace within string interpolations.
  StyleGuide: "#string-interpolation"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: no_space
  SupportedStyles:
  - space
  - no_space

Layout/Tab:
  Description: This cop checks for tabs inside the source code.
  StyleGuide: "#spaces-indentation"
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '0.51'
  IndentationWidth:

Layout/TrailingBlankLines:
  Description: |-
    This cop looks for trailing blank lines and a final newline in the
    source code.
  StyleGuide: "#newline-eof"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: final_newline
  SupportedStyles:
  - final_newline
  - final_blank_line

Layout/TrailingWhitespace:
  Description: This cop looks for trailing whitespace in the source code.
  StyleGuide: "#no-trailing-whitespace"
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '0.55'
  AllowInHeredoc: false

Lint/AmbiguousBlockAssociation:
  Description: |-
    This cop checks for ambiguous block association with method
    when param passed without parentheses.
  StyleGuide: "#syntax"
  Enabled: true
  VersionAdded: '0.48'

Lint/AmbiguousOperator:
  Description: |-
    This cop checks for ambiguous operators in the first argument of a
    method invocation without parentheses.
  StyleGuide: "#method-invocation-parens"
  Enabled: true
  VersionAdded: '0.17'

Lint/AmbiguousRegexpLiteral:
  Description: |-
    This cop checks for ambiguous regexp literals in the first argument of
    a method invocation without parentheses.
  Enabled: true
  VersionAdded: '0.17'

Lint/AssignmentInCondition:
  Description: |-
    This cop checks for assignments in the conditions of
    if/while/until.
  StyleGuide: "#safe-assignment-in-condition"
  Enabled: true
  VersionAdded: '0.9'
  AllowSafeAssignment: true

Lint/BigDecimalNew:
  Description: |-
    `BigDecimal.new()` is deprecated since BigDecimal 1.3.3.
    This cop identifies places where `BigDecimal.new()`
    can be replaced by `BigDecimal()`.
  Enabled: true
  VersionAdded: '0.53'

Lint/BooleanSymbol:
  Description: |-
    This cop checks for `:true` and `:false` symbols.
    In most cases it would be a typo.
  Enabled: true
  VersionAdded: '0.50'

Lint/CircularArgumentReference:
  Description: |-
    This cop checks for circular argument references in optional keyword
    arguments and optional ordinal arguments.
  Enabled: true
  VersionAdded: '0.33'

Lint/Debugger:
  Description: This cop checks for calls to debugger or pry.
  Enabled: true
  VersionAdded: '0.14'
  VersionChanged: '0.49'

Lint/DeprecatedClassMethods:
  Description: This cop checks for uses of the deprecated class method usages.
  Enabled: true
  VersionAdded: '0.19'

Lint/DisjunctiveAssignmentInConstructor:
  Description: 'In constructor, plain assignment is preferred over disjunctive.'
  Enabled: true
  Safe: false
  VersionAdded: '0.62'

Lint/DuplicateCaseCondition:
  Description: |-
    This cop checks that there are no repeated conditions
    used in case 'when' expressions.
  Enabled: true
  VersionAdded: '0.45'

Lint/DuplicateMethods:
  Description: |-
    This cop checks for duplicated instance (or singleton) method
    definitions.
  Enabled: true
  VersionAdded: '0.29'

Lint/DuplicatedKey:
  Description: This cop checks for duplicated keys in hash literals.
  Enabled: true
  VersionAdded: '0.34'

Lint/EachWithObjectArgument:
  Description: |-
    This cop checks if each_with_object is called with an immutable
    argument. Since the argument is the object that the given block shall
    make calls on to build something based on the enumerable that
    each_with_object iterates over, an immutable argument makes no sense.
    It's definitely a bug.
  Enabled: true
  VersionAdded: '0.31'

Lint/ElseLayout:
  Description: |-
    This cop checks for odd else block layout - like
    having an expression on the same line as the else keyword,
    which is usually a mistake.
  Enabled: true
  VersionAdded: '0.17'

Lint/EmptyEnsure:
  Description: This cop checks for empty `ensure` blocks
  Enabled: true
  VersionAdded: '0.10'
  VersionChanged: '0.48'
  AutoCorrect: false

Lint/EmptyExpression:
  Description: This cop checks for the presence of empty expressions.
  Enabled: true
  VersionAdded: '0.45'

Lint/EmptyInterpolation:
  Description: This cop checks for empty interpolation.
  Enabled: true
  VersionAdded: '0.20'
  VersionChanged: '0.45'

Lint/EmptyWhen:
  Description: This cop checks for the presence of `when` branches without a body.
  Enabled: true
  VersionAdded: '0.45'

Lint/EndInMethod:
  Description: This cop checks for END blocks in method definitions.
  Enabled: true
  VersionAdded: '0.9'

Lint/EnsureReturn:
  Description: |-
    This cop checks for *return* from an *ensure* block.
    Explicit return from an ensure block alters the control flow
    as the return will take precedence over any exception being raised,
    and the exception will be silently thrown away as if it were rescued.
  StyleGuide: "#no-return-ensure"
  Enabled: true
  VersionAdded: '0.9'

Lint/ErbNewArguments:
  Description: This cop emulates the following Ruby warnings in Ruby 2.6.
  Enabled: true
  VersionAdded: '0.56'

Lint/FlipFlop:
  Description: 'Checks for flip-flops'
  StyleGuide: '#no-flip-flops'
  Enabled: true
  VersionAdded: '0.16'

Lint/FloatOutOfRange:
  Description: |-
    This cop identifies Float literals which are, like, really really really
    really really really really really big. Too big. No-one needs Floats
    that big. If you need a float that big, something is wrong with you.
  Enabled: true
  VersionAdded: '0.36'

Lint/FormatParameterMismatch:
  Description: |-
    This lint sees if there is a mismatch between the number of
    expected fields for format/sprintf/#% and what is actually
    passed as arguments.
  Enabled: true
  VersionAdded: '0.33'

Lint/HandleExceptions:
  Description: This cop checks for *rescue* blocks with no body.
  StyleGuide: "#dont-hide-exceptions"
  Enabled: true
  VersionAdded: '0.9'

Lint/ImplicitStringConcatenation:
  Description: |-
    This cop checks for implicit string concatenation of string literals
    which are on the same line.
  Enabled: true
  VersionAdded: '0.36'

Lint/IneffectiveAccessModifier:
  Description: |-
    This cop checks for `private` or `protected` access modifiers which are
    applied to a singleton method. These access modifiers do not make
    singleton methods private/protected. `private_class_method` can be
    used for that.
  Enabled: true
  VersionAdded: '0.36'

Lint/InheritException:
  Description: |-
    This cop looks for error classes inheriting from `Exception`
    and its standard library subclasses, excluding subclasses of
    `StandardError`. It is configurable to suggest using either
    `RuntimeError` (default) or `StandardError` instead.
  Enabled: true
  VersionAdded: '0.41'
  EnforcedStyle: runtime_error
  SupportedStyles:
  - runtime_error
  - standard_error

Lint/InterpolationCheck:
  Description: This cop checks for interpolation in a single quoted string.
  Enabled: true
  VersionAdded: '0.50'

Lint/LiteralAsCondition:
  Description: |-
    This cop checks for literals used as the conditions or as
    operands in and/or expressions serving as the conditions of
    if/while/until.
  Enabled: true
  VersionAdded: '0.51'

Lint/LiteralInInterpolation:
  Description: This cop checks for interpolated literals.
  Enabled: true
  VersionAdded: '0.19'
  VersionChanged: '0.32'

Lint/Loop:
  Description: This cop checks for uses of *begin...end while/until something*.
  StyleGuide: "#loop-with-break"
  Enabled: true
  VersionAdded: '0.9'

Lint/MissingCopEnableDirective:
  Description: |-
    This cop checks that there is an `# rubocop:enable ...` statement
    after a `# rubocop:disable ...` statement. This will prevent leaving
    cop disables on wide ranges of code, that latter contributors to
    a file wouldn't be aware of.
  Enabled: true
  VersionAdded: '0.52'
  MaximumRangeSize: .inf

Lint/MultipleCompare:
  Description: |-
    In math and Python, we can use `x < y < z` style comparison to compare
    multiple value. However, we can't use the comparison in Ruby. However,
    the comparison is not syntax error. This cop checks the bad usage of
    comparison operators.
  Enabled: true
  VersionAdded: '0.47'

Lint/NestedMethodDefinition:
  Description: This cop checks for nested method definitions.
  StyleGuide: "#no-nested-methods"
  Enabled: true
  VersionAdded: '0.32'

Lint/NestedPercentLiteral:
  Description: This cop checks for nested percent literals.
  Enabled: true
  VersionAdded: '0.52'

Lint/NextWithoutAccumulator:
  Description: Don't omit the accumulator when calling `next` in a `reduce` block.
  Enabled: true
  VersionAdded: '0.36'

Lint/NonLocalExitFromIterator:
  Description: |-
    This cop checks for non-local exits from iterators without a return
    value. It registers an offense under these conditions:
  Enabled: true
  VersionAdded: '0.30'

Lint/NumberConversion:
  Description: |-
    This cop warns the usage of unsafe number conversions. Unsafe
    number conversion can cause unexpected error if auto type conversion
    fails. Cop prefer parsing with number class instead.
  Enabled: false
  VersionAdded: '0.53'

Lint/OrderedMagicComments:
  Description: |-
    Checks the proper ordering of magic comments and whether
    a magic comment is not placed before a shebang.
  Enabled: true
  VersionAdded: '0.53'

Lint/ParenthesesAsGroupedExpression:
  Description: |-
    Checks for space between the name of a called method and a left
    parenthesis.
  StyleGuide: "#parens-no-spaces"
  Enabled: true
  VersionAdded: '0.12'

Lint/PercentStringArray:
  Description: This cop checks for quotes and commas in %w, e.g. `%w('foo', "bar")`
  Enabled: true
  VersionAdded: '0.41'

Lint/PercentSymbolArray:
  Description: This cop checks for colons and commas in %i, e.g. `%i(:foo, :bar)`
  Enabled: true
  VersionAdded: '0.41'

Lint/RandOne:
  Description: |-
    This cop checks for `rand(1)` calls.
    Such calls always return `0`.
  Enabled: true
  VersionAdded: '0.36'

Lint/RedundantWithIndex:
  Description: This cop checks for redundant `with_index`.
  Enabled: true
  VersionAdded: '0.50'

Lint/RedundantWithObject:
  Description: This cop checks for redundant `with_object`.
  Enabled: true
  VersionAdded: '0.51'

Lint/RegexpAsCondition:
  Description: |-
    This cop checks for regexp literals used as `match-current-line`.
    If a regexp literal is in condition, the regexp matches `$_` implicitly.
  Enabled: true
  VersionAdded: '0.51'

Lint/RequireParentheses:
  Description: |-
    This cop checks for expressions where there is a call to a predicate
    method with at least one argument, where no parentheses are used around
    the parameter list, and a boolean operator, && or ||, is used in the
    last argument.
  Enabled: true
  VersionAdded: '0.18'

Lint/RescueException:
  Description: This cop checks for *rescue* blocks targeting the Exception class.
  StyleGuide: "#no-blind-rescues"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: 0.27.1

Lint/RescueType:
  Description: |-
    Check for arguments to `rescue` that will result in a `TypeError`
    if an exception is raised.
  Enabled: true
  VersionAdded: '0.49'

Lint/ReturnInVoidContext:
  Description: |-
    This cop checks for the use of a return with a value in a context
    where the value will be ignored. (initialize and setter methods)
  Enabled: true
  VersionAdded: '0.50'

Lint/SafeNavigationChain:
  Description: |-
    The safe navigation operator returns nil if the receiver is
    nil. If you chain an ordinary method call after a safe
    navigation operator, it raises NoMethodError. We should use a
    safe navigation operator after a safe navigation operator.
    This cop checks for the problem outlined above.
  Enabled: true
  VersionAdded: '0.47'
  VersionChanged: '0.56'
  Whitelist:
  - present?
  - blank?
  - presence
  - try
  - try!

Lint/SafeNavigationConsistency:
  Description: |-
    This cop check to make sure that if safe navigation is used for a method
    call in an `&&` or `||` condition that safe navigation is used for all
    method calls on that same object.
  Enabled: true
  VersionAdded: '0.55'
  Whitelist:
  - present?
  - blank?
  - presence
  - try
  - try!

Lint/ScriptPermission:
  Description: |-
    This cop checks if a file which has a shebang line as
    its first line is granted execute permission.
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '0.50'

Lint/ShadowedArgument:
  Description: This cop checks for shadowed arguments.
  Enabled: true
  VersionAdded: '0.52'
  IgnoreImplicitReferences: false

Lint/ShadowedException:
  Description: |-
    This cop checks for a rescued exception that get shadowed by a
    less specific exception being rescued before a more specific
    exception is rescued.
  Enabled: true
  VersionAdded: '0.41'

Lint/ShadowingOuterLocalVariable:
  Description: |-
    This cop looks for use of the same name as outer local variables
    for block arguments or block local variables.
    This is a mimic of the warning
    "shadowing outer local variable - foo" from `ruby -cw`.
  Enabled: true
  VersionAdded: '0.9'

Lint/StringConversionInInterpolation:
  Description: |-
    This cop checks for string conversion in string interpolation,
    which is redundant.
  StyleGuide: "#no-to-s"
  Enabled: true
  VersionAdded: '0.19'
  VersionChanged: '0.20'

Lint/Syntax:
  Description: |-
    This is not actually a cop. It does not inspect anything. It just
    provides methods to repack Parser's diagnostics/errors
    into RuboCop's offenses.
  Enabled: true
  VersionAdded: '0.9'

Lint/UnderscorePrefixedVariableName:
  Description: |-
    This cop checks for underscore-prefixed variables that are actually
    used.
  Enabled: true
  VersionAdded: '0.21'

Lint/UnifiedInteger:
  Description: This cop checks for using Fixnum or Bignum constant.
  Enabled: true
  VersionAdded: '0.43'

Lint/UnneededCopDisableDirective:
  Description: |-
    This cop detects instances of rubocop:disable comments that can be
    removed without causing any offenses to be reported. It's implemented
    as a cop in that it inherits from the Cop base class and calls
    add_offense. The unusual part of its implementation is that it doesn't
    have any on_* methods or an investigate method. This means that it
    doesn't take part in the investigation phase when the other cops do
    their work. Instead, it waits until it's called in a later stage of the
    execution. The reason it can't be implemented as a normal cop is that
    it depends on the results of all other cops to do its work.
  Enabled: true
  VersionAdded: '0.53'

Lint/UnneededCopEnableDirective:
  Description: |-
    This cop detects instances of rubocop:enable comments that can be
    removed.
  Enabled: true
  VersionAdded: '0.53'

Lint/UnneededRequireStatement:
  Description: Checks for unnecessary `require` statement.
  Enabled: true
  VersionAdded: '0.51'

Lint/UnneededSplatExpansion:
  Description: This cop checks for unneeded usages of splat expansion
  Enabled: true
  VersionAdded: '0.43'

Lint/UnreachableCode:
  Description: |-
    This cop checks for unreachable code.
    The check are based on the presence of flow of control
    statement in non-final position in *begin*(implicit) blocks.
  Enabled: true
  VersionAdded: '0.9'

Lint/UnusedBlockArgument:
  Description: This cop checks for unused block arguments.
  StyleGuide: "#underscore-unused-vars"
  Enabled: true
  VersionAdded: '0.21'
  VersionChanged: '0.22'
  IgnoreEmptyBlocks: true
  AllowUnusedKeywordArguments: false

Lint/UnusedMethodArgument:
  Description: This cop checks for unused method arguments.
  StyleGuide: "#underscore-unused-vars"
  Enabled: true
  VersionAdded: '0.21'
  VersionChanged: '0.35'
  AllowUnusedKeywordArguments: false
  IgnoreEmptyMethods: true

Lint/UriEscapeUnescape:
  Description: |-
    This cop identifies places where `URI.escape` can be replaced by
    `CGI.escape`, `URI.encode_www_form`, or `URI.encode_www_form_component`
    depending on your specific use case.
    Also this cop identifies places where `URI.unescape` can be replaced by
    `CGI.unescape`, `URI.decode_www_form`,
    or `URI.decode_www_form_component` depending on your specific use case.
  Enabled: true
  VersionAdded: '0.50'

Lint/UriRegexp:
  Description: |-
    This cop identifies places where `URI.regexp` is obsolete and should
    not be used. Instead, use `URI::DEFAULT_PARSER.make_regexp`.
  Enabled: true
  VersionAdded: '0.50'

Lint/UselessAccessModifier:
  Description: |-
    This cop checks for redundant access modifiers, including those with no
    code, those which are repeated, and leading `public` modifiers in a
    class or module body. Conditionally-defined methods are considered as
    always being defined, and thus access modifiers guarding such methods
    are not redundant.
  Enabled: true
  VersionAdded: '0.20'
  VersionChanged: '0.47'
  ContextCreatingMethods: []
  MethodCreatingMethods: []

Lint/UselessAssignment:
  Description: |-
    This cop checks for every useless assignment to local variable in every
    scope.
    The basic idea for this cop was from the warning of `ruby -cw`:
  StyleGuide: "#underscore-unused-vars"
  Enabled: true
  VersionAdded: '0.11'

Lint/UselessComparison:
  Description: This cop checks for comparison of something with itself.
  Enabled: true
  VersionAdded: '0.11'

Lint/UselessElseWithoutRescue:
  Description: This cop checks for useless `else` in `begin..end` without `rescue`.
  Enabled: true
  VersionAdded: '0.17'

Lint/UselessSetterCall:
  Description: |-
    This cop checks for setter call to local variable as the final
    expression of a function definition.
  Enabled: true
  VersionAdded: '0.13'

Lint/Void:
  Description: |-
    This cop checks for operators, variables, literals, and nonmutating
    methods used in void context.
  Enabled: true
  VersionAdded: '0.9'
  CheckForMethodsWithNoSideEffects: false

Metrics/AbcSize:
  Description: |-
    This cop checks that the ABC size of methods is not higher than the
    configured maximum. The ABC size is based on assignments, branches
    (method calls), and conditions. See http://c2.com/cgi/wiki?AbcMetric
  Reference: http://c2.com/cgi/wiki?AbcMetric
  Enabled: true
  VersionAdded: '0.27'
  Max: 15

Metrics/BlockLength:
  Description: |-
    This cop checks if the length of a block exceeds some maximum value.
    Comment lines can optionally be ignored.
    The maximum allowed length is configurable.
    The cop can be configured to ignore blocks passed to certain methods.
  Enabled: true
  VersionAdded: '0.44'
  VersionChanged: '0.58'
  CountComments: false
  Max: 25
  ExcludedMethods:
  - refine

Metrics/BlockNesting:
  Description: |-
    This cop checks for excessive nesting of conditional and looping
    constructs.
  StyleGuide: "#three-is-the-number-thou-shalt-count"
  Enabled: true
  VersionAdded: '0.25'
  VersionChanged: '0.47'
  CountBlocks: false
  Max: 3

Metrics/ClassLength:
  Description: |-
    This cop checks if the length a class exceeds some maximum value.
    Comment lines can optionally be ignored.
    The maximum allowed length is configurable.
  Enabled: true
  VersionAdded: '0.25'
  CountComments: false
  Max: 100

Metrics/CyclomaticComplexity:
  Description: |-
    This cop checks that the cyclomatic complexity of methods is not higher
    than the configured maximum. The cyclomatic complexity is the number of
    linearly independent paths through a method. The algorithm counts
    decision points and adds one.
  Enabled: true
  VersionAdded: '0.25'
  Max: 6

Metrics/LineLength:
  Description: |-
    This cop checks the length of lines in the source code.
    The maximum length is configurable.
    The tab size is configured in the `IndentationWidth`
    of the `Layout/Tab` cop.
  StyleGuide: "#80-character-limits"
  Enabled: true
  VersionAdded: '0.25'
  VersionChanged: '0.46'
  Max: 80
  AllowHeredoc: true
  AllowURI: true
  URISchemes:
  - http
  - https
  IgnoreCopDirectives: false
  IgnoredPatterns: []

Metrics/MethodLength:
  Description: |-
    This cop checks if the length of a method exceeds some maximum value.
    Comment lines can optionally be ignored.
    The maximum allowed length is configurable.
  StyleGuide: "#short-methods"
  Enabled: true
  VersionAdded: '0.25'
  VersionChanged: 0.59.2
  CountComments: false
  Max: 10
  ExcludedMethods: []

Metrics/ModuleLength:
  Description: |-
    This cop checks if the length a module exceeds some maximum value.
    Comment lines can optionally be ignored.
    The maximum allowed length is configurable.
  Enabled: true
  VersionAdded: '0.31'
  CountComments: false
  Max: 100

Metrics/ParameterLists:
  Description: |-
    This cop checks for methods with too many parameters.
    The maximum number of parameters is configurable.
    Keyword arguments can optionally be excluded from the total count.
  StyleGuide: "#too-many-params"
  Enabled: true
  VersionAdded: '0.25'
  Max: 5
  CountKeywordArgs: true

Metrics/PerceivedComplexity:
  Description: |-
    This cop tries to produce a complexity score that's a measure of the
    complexity the reader experiences when looking at a method. For that
    reason it considers `when` nodes as something that doesn't add as much
    complexity as an `if` or a `&&`. Except if it's one of those special
    `case`/`when` constructs where there's no expression after `case`. Then
    the cop treats it as an `if`/`elsif`/`elsif`... and lets all the `when`
    nodes count. In contrast to the CyclomaticComplexity cop, this cop
    considers `else` nodes as adding complexity.
  Enabled: true
  VersionAdded: '0.25'
  Max: 7

Naming/AccessorMethodName:
  Description: This cop makes sure that accessor methods are named properly.
  StyleGuide: "#accessor_mutator_method_names"
  Enabled: true
  VersionAdded: '0.50'

Naming/AsciiIdentifiers:
  Description: This cop checks for non-ascii characters in identifier names.
  StyleGuide: "#english-identifiers"
  Enabled: true
  VersionAdded: '0.50'

Naming/BinaryOperatorParameterName:
  Description: |-
    This cop makes sure that certain binary operator methods have their
    sole  parameter named `other`.
  StyleGuide: "#other-arg"
  Enabled: true
  VersionAdded: '0.50'

Naming/ClassAndModuleCamelCase:
  Description: |-
    This cop checks for class and module names with
    an underscore in them.
  StyleGuide: "#camelcase-classes"
  Enabled: true
  VersionAdded: '0.50'

Naming/ConstantName:
  Description: |-
    This cop checks whether constant names are written using
    SCREAMING_SNAKE_CASE.
  StyleGuide: "#screaming-snake-case"
  Enabled: true
  VersionAdded: '0.50'

Naming/FileName:
  Description: |-
    This cop makes sure that Ruby source files have snake_case
    names. Ruby scripts (i.e. source files with a shebang in the
    first line) are ignored.
  StyleGuide: "#snake-case-files"
  Enabled: true
  VersionAdded: '0.50'
  Exclude: []
  ExpectMatchingDefinition: false
  Regex:
  IgnoreExecutableScripts: true
  AllowedAcronyms:
  - CLI
  - DSL
  - ACL
  - API
  - ASCII
  - CPU
  - CSS
  - DNS
  - EOF
  - GUID
  - HTML
  - HTTP
  - HTTPS
  - ID
  - IP
  - JSON
  - LHS
  - QPS
  - RAM
  - RHS
  - RPC
  - SLA
  - SMTP
  - SQL
  - SSH
  - TCP
  - TLS
  - TTL
  - UDP
  - UI
  - UID
  - UUID
  - URI
  - URL
  - UTF8
  - VM
  - XML
  - XMPP
  - XSRF
  - XSS

Naming/HeredocDelimiterCase:
  Description: |-
    This cop checks that your heredocs are using the configured case.
    By default it is configured to enforce uppercase heredocs.
  StyleGuide: "#heredoc-delimiters"
  Enabled: true
  VersionAdded: '0.50'
  EnforcedStyle: uppercase
  SupportedStyles:
  - lowercase
  - uppercase

Naming/HeredocDelimiterNaming:
  Description: |-
    This cop checks that your heredocs are using meaningful delimiters.
    By default it disallows `END` and `EO*`, and can be configured through
    blacklisting additional delimiters.
  StyleGuide: "#heredoc-delimiters"
  Enabled: true
  VersionAdded: '0.50'
  Blacklist:
  - !ruby/regexp /(^|\s)(EO[A-Z]{1}|END)(\s|$)/

Naming/MemoizedInstanceVariableName:
  Description: |-
    This cop checks for memoized methods whose instance variable name
    does not match the method name.
  Enabled: true
  VersionAdded: '0.53'
  VersionChanged: '0.58'
  EnforcedStyleForLeadingUnderscores: disallowed
  SupportedStylesForLeadingUnderscores:
  - disallowed
  - required
  - optional

Naming/MethodName:
  Description: |-
    This cop makes sure that all methods use the configured style,
    snake_case or camelCase, for their names.
  StyleGuide: "#snake-case-symbols-methods-vars"
  Enabled: true
  VersionAdded: '0.50'
  EnforcedStyle: snake_case
  SupportedStyles:
  - snake_case
  - camelCase

Naming/PredicateName:
  Description: This cop makes sure that predicates are named properly.
  StyleGuide: "#bool-methods-qmark"
  Enabled: true
  VersionAdded: '0.50'
  VersionChanged: '0.51'
  NamePrefix:
  - is_
  - has_
  - have_
  NamePrefixBlacklist:
  - is_
  - has_
  - have_
  NameWhitelist:
  - is_a?
  MethodDefinitionMacros:
  - define_method
  - define_singleton_method
  Exclude:
  - spec/**/*

Naming/UncommunicativeBlockParamName:
  Description: |-
    This cop checks block parameter names for how descriptive they
    are. It is highly configurable.
  Enabled: true
  VersionAdded: '0.53'
  MinNameLength: 1
  AllowNamesEndingInNumbers: true
  AllowedNames: []
  ForbiddenNames: []

Naming/UncommunicativeMethodParamName:
  Description: |-
    This cop checks method parameter names for how descriptive they
    are. It is highly configurable.
  Enabled: true
  VersionAdded: '0.53'
  VersionChanged: '0.59'
  MinNameLength: 3
  AllowNamesEndingInNumbers: true
  AllowedNames:
  - io
  - id
  - to
  - by
  - 'on'
  - in
  - at
  - ip
  - db
  ForbiddenNames: []

Naming/VariableName:
  Description: |-
    This cop makes sure that all variables use the configured style,
    snake_case or camelCase, for their names.
  StyleGuide: "#snake-case-symbols-methods-vars"
  Enabled: true
  VersionAdded: '0.50'
  EnforcedStyle: snake_case
  SupportedStyles:
  - snake_case
  - camelCase

Naming/VariableNumber:
  Description: |-
    This cop makes sure that all numbered variables use the
    configured style, snake_case, normalcase, or non_integer,
    for their numbering.
  Enabled: true
  VersionAdded: '0.50'
  EnforcedStyle: normalcase
  SupportedStyles:
  - snake_case
  - normalcase
  - non_integer

Performance/Caller:
  Description: |-
    This cop identifies places where `caller[n]`
    can be replaced by `caller(n..n).first`.
  Enabled: true
  VersionAdded: '0.49'

Performance/CaseWhenSplat:
  Description: |-
    Reordering `when` conditions with a splat to the end
    of the `when` branches can improve performance.
  Enabled: false
  AutoCorrect: false
  SafeAutoCorrect: false
  VersionAdded: '0.34'
  VersionChanged: '0.59'

Performance/Casecmp:
  Description: |-
    This cop identifies places where a case-insensitive string comparison
    can better be implemented using `casecmp`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#stringcasecmp-vs-stringdowncase---code
  Enabled: true
  VersionAdded: '0.36'

Performance/ChainArrayAllocation:
  Description: |-
    This cop is used to identify usages of
    Each of these methods (`compact`, `flatten`, `map`) will generate a
    new intermediate array that is promptly thrown away. Instead it is
    faster to mutate when we know it's safe.
  Reference: https://twitter.com/schneems/status/1034123879978029057
  Enabled: false
  VersionAdded: '0.59'

Performance/CompareWithBlock:
  Description: |-
    This cop identifies places where `sort { |a, b| a.foo <=> b.foo }`
    can be replaced by `sort_by(&:foo)`.
    This cop also checks `max` and `min` methods.
  Enabled: true
  VersionAdded: '0.46'

Performance/Count:
  Description: |-
    This cop is used to identify usages of `count` on an `Enumerable` that
    follow calls to `select` or `reject`. Querying logic can instead be
    passed to the `count` call.
  SafeMode: true
  Enabled: true
  VersionAdded: '0.31'
  VersionChanged: '0.39'

Performance/Detect:
  Description: |-
    This cop is used to identify usages of
    `select.first`, `select.last`, `find_all.first`, and `find_all.last`
    and change them to use `detect` instead.
  Reference: https://github.com/JuanitoFatas/fast-ruby#enumerabledetect-vs-enumerableselectfirst-code
  SafeMode: true
  Enabled: true
  VersionAdded: '0.30'
  VersionChanged: '0.39'

Performance/DoubleStartEndWith:
  Description: |-
    This cop checks for double `#start_with?` or `#end_with?` calls
    separated by `||`. In some cases such calls can be replaced
    with an single `#start_with?`/`#end_with?` call.
  Enabled: true
  VersionAdded: '0.36'
  VersionChanged: '0.48'
  IncludeActiveSupportAliases: false

Performance/EndWith:
  Description: |-
    This cop identifies unnecessary use of a regex where `String#end_with?`
    would suffice.
  Reference: https://github.com/JuanitoFatas/fast-ruby#stringmatch-vs-stringstart_withstringend_with-code-start-code-end
  SafeAutoCorrect: false
  AutoCorrect: false
  Enabled: true
  VersionAdded: '0.36'
  VersionChanged: '0.44'

Performance/FixedSize:
  Description: Do not compute the size of statically sized objects.
  Enabled: true
  VersionAdded: '0.35'

Performance/FlatMap:
  Description: This cop is used to identify usages of
  Reference: https://github.com/JuanitoFatas/fast-ruby#enumerablemaparrayflatten-vs-enumerableflat_map-code
  Enabled: true
  VersionAdded: '0.30'
  EnabledForFlattenWithoutParams: false

Performance/InefficientHashSearch:
  Description: |-
    This cop checks for inefficient searching of keys and values within
    hashes.
  Reference: https://github.com/JuanitoFatas/fast-ruby#hashkey-instead-of-hashkeysinclude-code
  Enabled: true
  VersionAdded: '0.56'
  Safe: false

Performance/LstripRstrip:
  Description: |-
    This cop identifies places where `lstrip.rstrip` can be replaced by
    `strip`.
  Enabled: true
  VersionAdded: '0.36'

Performance/OpenStruct:
  Description: |-
    This cop checks for `OpenStruct.new` calls.
    Instantiation of an `OpenStruct` invalidates
    Ruby global method cache as it causes dynamic method
    definition during program runtime.
    This could have an effect on performance,
    especially in case of single-threaded
    applications with multiple `OpenStruct` instantiations.
  Enabled: false
  VersionAdded: '0.61'
  Safe: false

Performance/RangeInclude:
  Description: |-
    This cop identifies uses of `Range#include?`, which iterates over each
    item in a `Range` to see if a specified item is there. In contrast,
    `Range#cover?` simply compares the target item with the beginning and
    end points of the `Range`. In a great majority of cases, this is what
    is wanted.
  Reference: https://github.com/JuanitoFatas/fast-ruby#cover-vs-include-code
  Enabled: true
  VersionAdded: '0.36'
  Safe: false

Performance/RedundantBlockCall:
  Description: |-
    This cop identifies the use of a `&block` parameter and `block.call`
    where `yield` would do just as well.
  Reference: https://github.com/JuanitoFatas/fast-ruby#proccall-and-block-arguments-vs-yieldcode
  Enabled: true
  VersionAdded: '0.36'

Performance/RedundantMatch:
  Description: |-
    This cop identifies the use of `Regexp#match` or `String#match`, which
    returns `#<MatchData>`/`nil`. The return value of `=~` is an integral
    index/`nil` and is more performant.
  Enabled: true
  VersionAdded: '0.36'

Performance/RedundantMerge:
  Description: |-
    This cop identifies places where `Hash#merge!` can be replaced by
    `Hash#[]=`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#hashmerge-vs-hash-code
  Enabled: true
  VersionAdded: '0.36'
  MaxKeyValuePairs: 2

Performance/RedundantSortBy:
  Description: |-
    This cop identifies places where `sort_by { ... }` can be replaced by
    `sort`.
  Enabled: true
  VersionAdded: '0.36'

Performance/RegexpMatch:
  Description: |-
    In Ruby 2.4, `String#match?`, `Regexp#match?`, and `Symbol#match?`
    have been added. The methods are faster than `match`.
    Because the methods avoid creating a `MatchData` object or saving
    backref.
    So, when `MatchData` is not used, use `match?` instead of `match`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#regexp-vs-stringmatch-vs-string-vs-stringmatch-code-
  Enabled: true
  VersionAdded: '0.47'

Performance/ReverseEach:
  Description: |-
    This cop is used to identify usages of `reverse.each` and
    change them to use `reverse_each` instead.
  Reference: https://github.com/JuanitoFatas/fast-ruby#enumerablereverseeach-vs-enumerablereverse_each-code
  Enabled: true
  VersionAdded: '0.30'

Performance/Sample:
  Description: |-
    This cop is used to identify usages of `shuffle.first`,
    `shuffle.last`, and `shuffle[]` and change them to use
    `sample` instead.
  Reference: https://github.com/JuanitoFatas/fast-ruby#arrayshufflefirst-vs-arraysample-code
  Enabled: true
  VersionAdded: '0.30'

Performance/Size:
  Description: |-
    This cop is used to identify usages of `count` on an
    `Array` and `Hash` and change them to `size`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#arraylength-vs-arraysize-vs-arraycount-code
  Enabled: true
  VersionAdded: '0.30'

Performance/StartWith:
  Description: |-
    This cop identifies unnecessary use of a regex where
    `String#start_with?` would suffice.
  Reference: https://github.com/JuanitoFatas/fast-ruby#stringmatch-vs-stringstart_withstringend_with-code-start-code-end
  SafeAutoCorrect: false
  AutoCorrect: false
  Enabled: true
  VersionAdded: '0.36'
  VersionChanged: '0.44'

Performance/StringReplacement:
  Description: |-
    This cop identifies places where `gsub` can be replaced by
    `tr` or `delete`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#stringgsub-vs-stringtr-code
  Enabled: true
  VersionAdded: '0.33'

Performance/TimesMap:
  Description: |-
    This cop checks for .times.map calls.
    In most cases such calls can be replaced
    with an explicit array creation.
  AutoCorrect: false
  Enabled: true
  VersionAdded: '0.36'
  VersionChanged: '0.50'
  SafeAutoCorrect: false

Performance/UnfreezeString:
  Description: |-
    In Ruby 2.3 or later, use unary plus operator to unfreeze a string
    literal instead of `String#dup` and `String.new`.
    Unary plus operator is faster than `String#dup`.
  Enabled: true
  VersionAdded: '0.50'

Performance/UnneededSort:
  Description: |-
    This cop is used to identify instances of sorting and then
    taking only the first or last element. The same behavior can
    be accomplished without a relatively expensive sort by using
    `Enumerable#min` instead of sorting and taking the first
    element and `Enumerable#max` instead of sorting and taking the
    last element. Similarly, `Enumerable#min_by` and
    `Enumerable#max_by` can replace `Enumerable#sort_by` calls
    after which only the first or last element is used.
  Enabled: true
  VersionAdded: '0.55'

Performance/UriDefaultParser:
  Description: |-
    This cop identifies places where `URI::Parser.new`
    can be replaced by `URI::DEFAULT_PARSER`.
  Enabled: true
  VersionAdded: '0.50'

Rails:
  Enabled: false

Rails/ActionFilter:
  Description: This cop enforces the consistent use of action filter methods.
  Enabled: true
  VersionAdded: '0.19'
  EnforcedStyle: action
  SupportedStyles:
  - action
  - filter
  Include:
  - app/controllers/**/*.rb

Rails/ActiveRecordAliases:
  Description: |-
    Checks that ActiveRecord aliases are not used. The direct method names
    are more clear and easier to read.
  Enabled: true
  VersionAdded: '0.53'

Rails/ActiveSupportAliases:
  Description: |-
    This cop checks that ActiveSupport aliases to core ruby methods
    are not used.
  Enabled: true
  VersionAdded: '0.48'

Rails/ApplicationJob:
  Description: This cop checks that jobs subclass ApplicationJob with Rails 5.0.
  Enabled: true
  VersionAdded: '0.49'

Rails/ApplicationRecord:
  Description: This cop checks that models subclass ApplicationRecord with Rails 5.0.
  Enabled: true
  VersionAdded: '0.49'

Rails/AssertNot:
  Description: Use `assert_not` instead of `assert !`.
  Enabled: true
  VersionAdded: '0.56'
  Include:
  - "**/test/**/*"

Rails/BelongsTo:
  Description: >-
                  Use `optional: true` instead of `required: false` for
                  `belongs_to` relations'
  Enabled: true
  VersionAdded: '0.62'

Rails/Blank:
  Description: |-
    This cop checks for code that can be written with simpler conditionals
    using `Object#blank?` defined by Active Support.
  Enabled: true
  VersionAdded: '0.48'
  NilOrEmpty: true
  NotPresent: true
  UnlessPresent: true

Rails/BulkChangeTable:
  Description: |-
    This Cop checks whether alter queries are combinable.
    If combinable queries are detected, it suggests to you
    to use `change_table` with `bulk: true` instead.
    This option causes the migration to generate a single
    ALTER TABLE statement combining multiple column alterations.
  Enabled: true
  VersionAdded: '0.57'
  Database:
  SupportedDatabases:
  - mysql
  - postgresql
  Include:
  - db/migrate/*.rb

Rails/CreateTableWithTimestamps:
  Description: |-
    This cop checks the migration for which timestamps are not included
    when creating a new table.
    In many cases, timestamps are useful information and should be added.
  Enabled: true
  VersionAdded: '0.52'
  Include:
  - db/migrate/*.rb

Rails/Date:
  Description: |-
    This cop checks for the correct use of Date methods,
    such as Date.today, Date.current etc.
  Enabled: true
  VersionAdded: '0.30'
  VersionChanged: '0.33'
  EnforcedStyle: flexible
  SupportedStyles:
  - strict
  - flexible

Rails/Delegate:
  Description: |-
    This cop looks for delegations that could have been created
    automatically with the `delegate` method.
  Enabled: true
  VersionAdded: '0.21'
  VersionChanged: '0.50'
  EnforceForPrefixed: true

Rails/DelegateAllowBlank:
  Description: |-
    This cop looks for delegations that pass :allow_blank as an option
    instead of :allow_nil. :allow_blank is not a valid option to pass
    to ActiveSupport#delegate.
  Enabled: true
  VersionAdded: '0.44'

Rails/DynamicFindBy:
  Description: |-
    This cop checks dynamic `find_by_*` methods.
    Use `find_by` instead of dynamic method.
    See. https://github.com/rubocop-hq/rails-style-guide#find_by
  StyleGuide: https://github.com/rubocop-hq/rails-style-guide#find_by
  Enabled: true
  VersionAdded: '0.44'
  Whitelist:
  - find_by_sql

Rails/EnumUniqueness:
  Description: This cop looks for duplicate values in enum declarations.
  Enabled: true
  VersionAdded: '0.46'
  Include:
  - app/models/**/*.rb

Rails/EnvironmentComparison:
  Description: |-
    This cop checks that Rails.env is compared using `.production?`-like
    methods instead of equality against a string or symbol.
  Enabled: true
  VersionAdded: '0.52'

Rails/Exit:
  Description: |-
    This cop enforces that `exit` calls are not used within a rails app.
    Valid options are instead to raise an error, break, return, or some
    other form of stopping execution of current request.
  Enabled: true
  VersionAdded: '0.41'
  Include:
  - app/**/*.rb
  - config/**/*.rb
  - lib/**/*.rb
  Exclude:
  - lib/**/*.rake

Rails/FilePath:
  Description: |-
    This cop is used to identify usages of file path joining process
    to use `Rails.root.join` clause. It is used to add uniformity when
    joining paths.
  Enabled: true
  VersionAdded: '0.47'
  VersionChanged: '0.57'
  EnforcedStyle: arguments
  SupportedStyles:
  - slashes
  - arguments

Rails/FindBy:
  Description: |-
    This cop is used to identify usages of `where.first` and
    change them to use `find_by` instead.
  StyleGuide: https://github.com/rubocop-hq/rails-style-guide#find_by
  Enabled: true
  VersionAdded: '0.30'
  Include:
  - app/models/**/*.rb

Rails/FindEach:
  Description: |-
    This cop is used to identify usages of `all.each` and
    change them to use `all.find_each` instead.
  StyleGuide: https://github.com/rubocop-hq/rails-style-guide#find-each
  Enabled: true
  VersionAdded: '0.30'
  Include:
  - app/models/**/*.rb

Rails/HasAndBelongsToMany:
  Description: This cop checks for the use of the has_and_belongs_to_many macro.
  StyleGuide: https://github.com/rubocop-hq/rails-style-guide#has-many-through
  Enabled: true
  VersionAdded: '0.12'
  Include:
  - app/models/**/*.rb

Rails/HasManyOrHasOneDependent:
  Description: |-
    This cop looks for `has_many` or `has_one` associations that don't
    specify a `:dependent` option.
    It doesn't register an offense if `:through` option was specified.
  StyleGuide: https://github.com/rubocop-hq/rails-style-guide#has_many-has_one-dependent-option
  Enabled: true
  VersionAdded: '0.50'
  Include:
  - app/models/**/*.rb

Rails/HttpPositionalArguments:
  Description: |-
    This cop is used to identify usages of http methods like `get`, `post`,
    `put`, `patch` without the usage of keyword arguments in your tests and
    change them to use keyword args. This cop only applies to Rails >= 5.
    If you are running Rails < 5 you should disable the
    Rails/HttpPositionalArguments cop or set your TargetRailsVersion in your
    .rubocop.yml file to 4.0, etc.
  Enabled: true
  VersionAdded: '0.44'
  Include:
  - spec/**/*
  - test/**/*

Rails/HttpStatus:
  Description: Enforces use of symbolic or numeric value to define HTTP status.
  Enabled: true
  VersionAdded: '0.54'
  EnforcedStyle: symbolic
  SupportedStyles:
  - numeric
  - symbolic

Rails/IgnoredSkipActionFilterOption:
  Description: 'Checks that `if` and `only` (or `except`) are not used together as options of `skip_*` action filter.'
  Reference: 'https://api.rubyonrails.org/classes/AbstractController/Callbacks/ClassMethods.html#method-i-_normalize_callback_options'
  Enabled: true
  VersionAdded: '0.63'
  Include:
    - app/controllers/**/*.rb

Rails/InverseOf:
  Description: |-
    This cop looks for has_(one|many) and belongs_to associations where
    Active Record can't automatically determine the inverse association
    because of a scope or the options used. Using the blog with order scope
    example below, traversing the a Blog's association in both directions
    with `blog.posts.first.blog` would cause the `blog` to be loaded from
    the database twice.
  Enabled: true
  VersionAdded: '0.52'
  Include:
  - app/models/**/*.rb

Rails/LexicallyScopedActionFilter:
  Description: |-
    This cop checks that methods specified in the filter's `only` or
    `except` options are defined within the same class or module.
  StyleGuide: https://github.com/rubocop-hq/rails-style-guide#lexically-scoped-action-filter
  Enabled: true
  VersionAdded: '0.52'
  Include:
  - app/controllers/**/*.rb

Rails/LinkToBlank:
  Description: |-
    This cop checks for calls to `link_to` that contain a
    `target: '_blank'` but no `rel: 'noopener'`. This can be a security
    risk as the loaded page will have control over the previous page
    and could change its location for phishing purposes.
  Reference: https://mathiasbynens.github.io/rel-noopener/
  Enabled: true
  VersionAdded: '0.62'

Rails/NotNullColumn:
  Description: |-
    This cop checks for add_column call with NOT NULL constraint
    in migration file.
  Enabled: true
  VersionAdded: '0.43'
  Include:
  - db/migrate/*.rb

Rails/Output:
  Description: This cop checks for the use of output calls like puts and print
  Enabled: true
  VersionAdded: '0.15'
  VersionChanged: '0.19'
  Include:
  - app/**/*.rb
  - config/**/*.rb
  - db/**/*.rb
  - lib/**/*.rb

Rails/OutputSafety:
  Description: |-
    This cop checks for the use of output safety calls like `html_safe`,
    `raw`, and `safe_concat`. These methods do not escape content. They
    simply return a SafeBuffer containing the content as is. Instead,
    use `safe_join` to join content and escape it and concat to
    concatenate content and escape it, ensuring its safety.
  Enabled: true
  VersionAdded: '0.41'

Rails/PluralizationGrammar:
  Description: |-
    This cop checks for correct grammar when using ActiveSupport's
    core extensions to the numeric classes.
  Enabled: true
  VersionAdded: '0.35'

Rails/Presence:
  Description: |-
    This cop checks code that can be written more easily using
    `Object#presence` defined by Active Support.
  Enabled: true
  VersionAdded: '0.52'

Rails/Present:
  Description: |-
    This cop checks for code that can be written with simpler conditionals
    using `Object#present?` defined by Active Support.
  Enabled: true
  VersionAdded: '0.48'
  NotNilAndNotEmpty: true
  NotBlank: true
  UnlessBlank: true

Rails/ReadWriteAttribute:
  Description: |-
    This cop checks for the use of the `read_attribute` or `write_attribute`
    methods and recommends square brackets instead.
  StyleGuide: https://github.com/rubocop-hq/rails-style-guide#read-attribute
  Enabled: true
  VersionAdded: '0.20'
  VersionChanged: '0.29'
  Include:
  - app/models/**/*.rb

Rails/RedundantReceiverInWithOptions:
  Description: |-
    This cop checks for redundant receiver in `with_options`.
    Receiver is implicit from Rails 4.2 or higher.
  Enabled: true
  VersionAdded: '0.52'

Rails/ReflectionClassName:
  Description: 'Use a string for `class_name` option value in the definition of a reflection.'
  Enabled: true
  VersionAdded: '0.64'

Rails/RefuteMethods:
  Description: Use `assert_not` methods instead of `refute` methods.
  Enabled: true
  VersionAdded: '0.56'
  Include:
  - "**/test/**/*"

Rails/RelativeDateConstant:
  Description: |-
    This cop checks whether constant value isn't relative date.
    Because the relative date will be evaluated only once.
  Enabled: true
  VersionAdded: '0.48'
  VersionChanged: '0.59'
  AutoCorrect: false

Rails/RequestReferer:
  Description: |-
    This cop checks for consistent uses of `request.referer` or
    `request.referrer`, depending on the cop's configuration.
  Enabled: true
  VersionAdded: '0.41'
  EnforcedStyle: referer
  SupportedStyles:
  - referer
  - referrer

Rails/ReversibleMigration:
  Description: |-
    This cop checks whether the change method of the migration file is
    reversible.
  StyleGuide: https://github.com/rubocop-hq/rails-style-guide#reversible-migration
  Reference: https://api.rubyonrails.org/classes/ActiveRecord/Migration/CommandRecorder.html
  Enabled: true
  VersionAdded: '0.47'
  Include:
  - db/migrate/*.rb

Rails/SafeNavigation:
  Description: |-
    This cop converts usages of `try!` to `&.`. It can also be configured
    to convert `try`. It will convert code to use safe navigation if the
    target Ruby version is set to 2.3+
  Enabled: true
  VersionAdded: '0.43'
  ConvertTry: false

Rails/SaveBang:
  Description: |-
    This cop identifies possible cases where Active Record save! or related
    should be used instead of save because the model might have failed to
    save and an exception is better than unhandled failure.
  StyleGuide: https://github.com/rubocop-hq/rails-style-guide#save-bang
  Enabled: false
  VersionAdded: '0.42'
  VersionChanged: '0.59'
  AllowImplicitReturn: true
  AllowedReceivers: []

Rails/ScopeArgs:
  Description: |-
    This cop checks for scope calls where it was passed
    a method (usually a scope) instead of a lambda/proc.
  Enabled: true
  VersionAdded: '0.19'
  Include:
  - app/models/**/*.rb

Rails/SkipsModelValidations:
  Description: |-
    This cop checks for the use of methods which skip
    validations which are listed in
    https://guides.rubyonrails.org/active_record_validations.html#skipping-validations
  Reference: https://guides.rubyonrails.org/active_record_validations.html#skipping-validations
  Enabled: true
  VersionAdded: '0.47'
  VersionChanged: '0.60'
  Blacklist:
  - decrement!
  - decrement_counter
  - increment!
  - increment_counter
  - toggle!
  - touch
  - update_all
  - update_attribute
  - update_column
  - update_columns
  - update_counters
  Whitelist: []

Rails/TimeZone:
  Description: This cop checks for the use of Time methods without zone.
  StyleGuide: https://github.com/rubocop-hq/rails-style-guide#time
  Reference: http://danilenko.org/2012/7/6/rails_timezones
  Enabled: true
  VersionAdded: '0.30'
  VersionChanged: '0.33'
  EnforcedStyle: flexible
  SupportedStyles:
  - strict
  - flexible

Rails/UniqBeforePluck:
  Description: Prefer the use of uniq (or distinct), before pluck instead of after.
  Enabled: true
  VersionAdded: '0.40'
  VersionChanged: '0.47'
  EnforcedStyle: conservative
  SupportedStyles:
  - conservative
  - aggressive
  AutoCorrect: false

Rails/UnknownEnv:
  Description: |-
    This cop checks that environments called with `Rails.env` predicates
    exist.
  Enabled: true
  VersionAdded: '0.51'
  Environments:
  - development
  - test
  - production

Rails/Validation:
  Description: This cop checks for the use of old-style attribute validation macros.
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.41'
  Include:
  - app/models/**/*.rb

Security/Eval:
  Description: This cop checks for the use of `Kernel#eval` and `Binding#eval`.
  Enabled: true
  VersionAdded: '0.47'

Security/JSONLoad:
  Description: |-
    This cop checks for the use of JSON class methods which have potential
    security issues.
  Reference: https://ruby-doc.org/stdlib-2.3.0/libdoc/json/rdoc/JSON.html#method-i-load
  Enabled: true
  VersionAdded: '0.43'
  VersionChanged: '0.44'
  AutoCorrect: false
  SafeAutoCorrect: false

Security/MarshalLoad:
  Description: |-
    This cop checks for the use of Marshal class methods which have
    potential security issues leading to remote code execution when
    loading from an untrusted source.
  Reference: https://ruby-doc.org/core-2.3.3/Marshal.html#module-Marshal-label-Security+considerations
  Enabled: true
  VersionAdded: '0.47'

Security/Open:
  Description: This cop checks for the use of `Kernel#open`.
  Enabled: true
  VersionAdded: '0.53'
  Safe: false

Security/YAMLLoad:
  Description: |-
    This cop checks for the use of YAML class methods which have
    potential security issues leading to remote code execution when
    loading from an untrusted source.
  Reference: https://ruby-doc.org/stdlib-2.3.3/libdoc/yaml/rdoc/YAML.html#module-YAML-label-Security
  Enabled: true
  VersionAdded: '0.47'
  SafeAutoCorrect: false

Style/AccessModifierDeclarations:
  Description: |-
    Access modifiers should be declared to apply to a group of methods
    or inline before each method, depending on configuration.
  Enabled: true
  VersionAdded: '0.57'
  EnforcedStyle: group
  SupportedStyles:
  - inline
  - group

Style/Alias:
  Description: |-
    This cop enforces the use of either `#alias` or `#alias_method`
    depending on configuration.
    It also flags uses of `alias :symbol` rather than `alias bareword`.
  StyleGuide: "#alias-method"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.36'
  EnforcedStyle: prefer_alias
  SupportedStyles:
  - prefer_alias
  - prefer_alias_method

Style/AndOr:
  Description: |-
    This cop checks for uses of `and` and `or`, and suggests using `&&` and
    `||` instead. It can be configured to check only in conditions or in
    all contexts.
  StyleGuide: "#no-and-or-or"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.25'
  EnforcedStyle: always
  SupportedStyles:
  - always
  - conditionals

Style/ArrayJoin:
  Description: This cop checks for uses of "*" as a substitute for *join*.
  StyleGuide: "#array-join"
  Enabled: true
  VersionAdded: '0.20'
  VersionChanged: '0.31'

Style/AsciiComments:
  Description: |-
    This cop checks for non-ascii (non-English) characters
    in comments. You could set an array of allowed non-ascii chars in
    AllowedChars attribute (empty by default).
  StyleGuide: "#english-comments"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.52'
  AllowedChars: []

Style/Attr:
  Description: This cop checks for uses of Module#attr.
  StyleGuide: "#attr"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.12'

Style/AutoResourceCleanup:
  Description: |-
    This cop checks for cases when you could use a block
    accepting version of a method that does automatic
    resource cleanup.
  Enabled: false
  VersionAdded: '0.30'

Style/BarePercentLiterals:
  Description: This cop checks if usage of %() or %Q() matches configuration.
  StyleGuide: "#percent-q-shorthand"
  Enabled: true
  VersionAdded: '0.25'
  EnforcedStyle: bare_percent
  SupportedStyles:
  - percent_q
  - bare_percent

Style/BeginBlock:
  Description: This cop checks for BEGIN blocks.
  StyleGuide: "#no-BEGIN-blocks"
  Enabled: true
  VersionAdded: '0.9'

Style/BlockComments:
  Description: This cop looks for uses of block comments (=begin...=end).
  StyleGuide: "#no-block-comments"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.23'

Style/BlockDelimiters:
  Description: |-
    Check for uses of braces or do/end around single line or
    multi-line blocks.
  StyleGuide: "#single-line-blocks"
  Enabled: true
  VersionAdded: '0.30'
  VersionChanged: '0.35'
  EnforcedStyle: line_count_based
  SupportedStyles:
  - line_count_based
  - semantic
  - braces_for_chaining
  ProceduralMethods:
  - benchmark
  - bm
  - bmbm
  - create
  - each_with_object
  - measure
  - new
  - realtime
  - tap
  - with_object
  FunctionalMethods:
  - let
  - let!
  - subject
  - watch
  IgnoredMethods:
  - lambda
  - proc
  - it

Style/BracesAroundHashParameters:
  Description: |-
    This cop checks for braces around the last parameter in a method call
    if the last parameter is a hash.
    It supports `braces`, `no_braces` and `context_dependent` styles.
  Enabled: true
  VersionAdded: 0.14.1
  VersionChanged: '0.28'
  EnforcedStyle: no_braces
  SupportedStyles:
  - braces
  - no_braces
  - context_dependent

Style/CaseEquality:
  Description: This cop checks for uses of the case equality operator(===).
  StyleGuide: "#no-case-equality"
  Enabled: true
  VersionAdded: '0.9'

Style/CharacterLiteral:
  Description: Checks for uses of the character literal ?x.
  StyleGuide: "#no-character-literals"
  Enabled: true
  VersionAdded: '0.9'

Style/ClassAndModuleChildren:
  Description: |-
    This cop checks the style of children definitions at classes and
    modules. Basically there are two different styles:
  StyleGuide: "#namespace-definition"
  SafeAutoCorrect: false
  AutoCorrect: false
  Enabled: true
  VersionAdded: '0.19'
  EnforcedStyle: nested
  SupportedStyles:
  - nested
  - compact

Style/ClassCheck:
  Description: This cop enforces consistent use of `Object#is_a?` or `Object#kind_of?`.
  Enabled: true
  VersionAdded: '0.24'
  EnforcedStyle: is_a?
  SupportedStyles:
  - is_a?
  - kind_of?

Style/ClassMethods:
  Description: |-
    This cop checks for uses of the class/module name instead of
    self, when defining class/module methods.
  StyleGuide: "#def-self-class-methods"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.20'

Style/ClassVars:
  Description: |-
    This cop checks for uses of class variables. Offenses
    are signaled only on assignment to class variables to
    reduce the number of offenses that would be reported.
  StyleGuide: "#no-class-vars"
  Enabled: true
  VersionAdded: '0.13'

Style/CollectionMethods:
  Description: |-
    This cop enforces the use of consistent method names
    from the Enumerable module.
  StyleGuide: "#map-find-select-reduce-size"
  Enabled: false
  VersionAdded: '0.9'
  VersionChanged: '0.27'
  Safe: false
  PreferredMethods:
    collect: map
    collect!: map!
    inject: reduce
    detect: find
    find_all: select

Style/ColonMethodCall:
  Description: |-
    This cop checks for methods invoked via the :: operator instead
    of the . operator (like FileUtils::rmdir instead of FileUtils.rmdir).
  StyleGuide: "#double-colons"
  Enabled: true
  VersionAdded: '0.9'

Style/ColonMethodDefinition:
  Description: |-
    This cop checks for class methods that are defined using the `::`
    operator instead of the `.` operator.
  StyleGuide: "#colon-method-definition"
  Enabled: true
  VersionAdded: '0.52'

Style/CommandLiteral:
  Description: This cop enforces using `` or %x around command literals.
  StyleGuide: "#percent-x"
  Enabled: true
  VersionAdded: '0.30'
  EnforcedStyle: backticks
  SupportedStyles:
  - backticks
  - percent_x
  - mixed
  AllowInnerBackticks: false

Style/CommentAnnotation:
  Description: |-
    This cop checks that comment annotation keywords are written according
    to guidelines.
  StyleGuide: "#annotate-keywords"
  Enabled: true
  VersionAdded: '0.10'
  VersionChanged: '0.31'
  Keywords:
  - TODO
  - FIXME
  - OPTIMIZE
  - HACK
  - REVIEW

Style/CommentedKeyword:
  Description: |-
    This cop checks for comments put on the same line as some keywords.
    These keywords are: `begin`, `class`, `def`, `end`, `module`.
  Enabled: true
  VersionAdded: '0.51'

Style/ConditionalAssignment:
  Description: |-
    Check for `if` and `case` statements where each branch is used for
    assignment to the same variable when using the return of the
    condition can be used instead.
  Enabled: true
  VersionAdded: '0.36'
  VersionChanged: '0.47'
  EnforcedStyle: assign_to_condition
  SupportedStyles:
  - assign_to_condition
  - assign_inside_condition
  SingleLineConditionsOnly: true
  IncludeTernaryExpressions: true

Style/Copyright:
  Description: Check that a copyright notice was given in each source file.
  Enabled: false
  VersionAdded: '0.30'
  Notice: "^Copyright (\\(c\\) )?2[0-9]{3} .+"
  AutocorrectNotice: ''

Style/DateTime:
  Description: |-
    This cop checks for consistent usage of the `DateTime` class over the
    `Time` class. This cop is disabled by default since these classes,
    although highly overlapping, have particularities that make them not
    replaceable in certain situations when dealing with multiple timezones
    and/or DST.
  StyleGuide: "#date--time"
  Enabled: false
  VersionAdded: '0.51'
  VersionChanged: '0.59'
  AllowCoercion: false

Style/DefWithParentheses:
  Description: |-
    This cop checks for parentheses in the definition of a method,
    that does not take any arguments. Both instance and
    class/singleton methods are checked.
  StyleGuide: "#method-parens"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.12'

Style/Dir:
  Description: |-
    This cop checks for places where the `#__dir__` method can replace more
    complex constructs to retrieve a canonicalized absolute path to the
    current file.
  Enabled: true
  VersionAdded: '0.50'

Style/Documentation:
  Description: |-
    This cop checks for missing top-level documentation of
    classes and modules. Classes with no body are exempt from the
    check and so are namespace modules - modules that have nothing in
    their bodies except classes, other modules, or constant definitions.
  Enabled: true
  VersionAdded: '0.9'
  Exclude:
  - spec/**/*
  - test/**/*

Style/DocumentationMethod:
  Description: |-
    This cop checks for missing documentation comment for public methods.
    It can optionally be configured to also require documentation for
    non-public methods.
  Enabled: false
  VersionAdded: '0.43'
  Exclude:
  - spec/**/*
  - test/**/*
  RequireForNonPublicMethods: false

Style/DoubleNegation:
  Description: |-
    This cop checks for uses of double negation (!!) to convert something
    to a boolean value. As this is both cryptic and usually redundant, it
    should be avoided.
  StyleGuide: "#no-bang-bang"
  Enabled: true
  VersionAdded: '0.19'

Style/EachForSimpleLoop:
  Description: |-
    This cop checks for loops which iterate a constant number of times,
    using a Range literal and `#each`. This can be done more readably using
    `Integer#times`.
  Enabled: true
  VersionAdded: '0.41'

Style/EachWithObject:
  Description: |-
    This cop looks for inject / reduce calls where the passed in object is
    returned at the end and so could be replaced by each_with_object without
    the need to return the object at the end.
  Enabled: true
  VersionAdded: '0.22'
  VersionChanged: '0.42'

Style/EmptyBlockParameter:
  Description: |-
    This cop checks for pipes for empty block parameters. Pipes for empty
    block parameters do not cause syntax errors, but they are redundant.
  Enabled: true
  VersionAdded: '0.52'

Style/EmptyCaseCondition:
  Description: This cop checks for case statements with an empty condition.
  Enabled: true
  VersionAdded: '0.40'

Style/EmptyElse:
  Description: |-
    Checks for empty else-clauses, possibly including comments and/or an
    explicit `nil` depending on the EnforcedStyle.
  Enabled: true
  VersionAdded: '0.28'
  VersionChanged: '0.32'
  EnforcedStyle: both
  SupportedStyles:
  - empty
  - nil
  - both

Style/EmptyLambdaParameter:
  Description: |-
    This cop checks for parentheses for empty lambda parameters. Parentheses
    for empty lambda parameters do not cause syntax errors, but they are
    redundant.
  Enabled: true
  VersionAdded: '0.52'

Style/EmptyLiteral:
  Description: |-
    This cop checks for the use of a method, the result of which
    would be a literal, like an empty array, hash, or string.
  StyleGuide: "#literal-array-hash"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.12'

Style/EmptyMethod:
  Description: |-
    This cop checks for the formatting of empty method definitions.
    By default it enforces empty method definitions to go on a single
    line (compact style), but it can be configured to enforce the `end`
    to go on its own line (expanded style).
  StyleGuide: "#no-single-line-methods"
  Enabled: true
  VersionAdded: '0.46'
  EnforcedStyle: compact
  SupportedStyles:
  - compact
  - expanded

Style/Encoding:
  Description: This cop checks ensures source files have no utf-8 encoding comments.
  StyleGuide: "#utf-8"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.50'

Style/EndBlock:
  Description: This cop checks for END blocks.
  StyleGuide: "#no-END-blocks"
  Enabled: true
  VersionAdded: '0.9'

Style/EvalWithLocation:
  Description: |-
    This cop checks `eval` method usage. `eval` can receive source location
    metadata, that are filename and line number. The metadata is used by
    backtraces. This cop recommends to pass the metadata to `eval` method.
  Enabled: true
  VersionAdded: '0.52'

Style/EvenOdd:
  Description: |-
    This cop checks for places where `Integer#even?` or `Integer#odd?`
    can be used.
  StyleGuide: "#predicate-methods"
  Enabled: true
  VersionAdded: '0.12'
  VersionChanged: '0.29'

Style/ExpandPathArguments:
  Description: |-
    This cop checks for use of the `File.expand_path` arguments.
    Likewise, it also checks for the `Pathname.new` argument.
  Enabled: true
  VersionAdded: '0.53'

Style/For:
  Description: |-
    This cop looks for uses of the `for` keyword or `each` method. The
    preferred alternative is set in the EnforcedStyle configuration
    parameter. An `each` call with a block on a single line is always
    allowed.
  StyleGuide: "#no-for-loops"
  Enabled: true
  VersionAdded: '0.13'
  VersionChanged: '0.59'
  EnforcedStyle: each
  SupportedStyles:
  - each
  - for

Style/FormatString:
  Description: |-
    This cop enforces the use of a single string formatting utility.
    Valid options include Kernel#format, Kernel#sprintf and String#%.
  StyleGuide: "#sprintf"
  Enabled: true
  VersionAdded: '0.19'
  VersionChanged: '0.49'
  EnforcedStyle: format
  SupportedStyles:
  - format
  - sprintf
  - percent

Style/FormatStringToken:
  Description: Use a consistent style for named format string tokens.
  Enabled: true
  EnforcedStyle: annotated
  SupportedStyles:
  - annotated
  - template
  - unannotated
  VersionAdded: '0.49'
  VersionChanged: '0.52'

Style/FrozenStringLiteralComment:
  Description: >-
                 Add the frozen_string_literal comment to the top of files
                 to help transition to frozen string literals by default.

  Enabled: true
  VersionAdded: '0.36'
  VersionChanged: '0.47'
  EnforcedStyle: when_needed
  SupportedStyles:
  - when_needed
  - always
  - never

Style/GlobalVars:
  Description: |-
    This cop looks for uses of global variables.
    It does not report offenses for built-in global variables.
    Built-in global variables are allowed by default. Additionally
    users can allow additional variables via the AllowedVariables option.
  StyleGuide: "#instance-vars"
  Reference: https://www.zenspider.com/ruby/quickref.html
  Enabled: true
  VersionAdded: '0.13'
  AllowedVariables: []

Style/GuardClause:
  Description: |-
    Use a guard clause instead of wrapping the code inside a conditional
    expression
  StyleGuide: "#no-nested-conditionals"
  Enabled: true
  VersionAdded: '0.20'
  VersionChanged: '0.22'
  MinBodyLength: 1

Style/HashSyntax:
  Description: This cop checks hash literal syntax.
  StyleGuide: "#hash-literals"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.43'
  EnforcedStyle: ruby19
  SupportedStyles:
  - ruby19
  - hash_rockets
  - no_mixed_keys
  - ruby19_no_mixed_keys
  UseHashRocketsWithSymbolValues: false
  PreferHashRocketsForNonAlnumEndingSymbols: false

Style/IdenticalConditionalBranches:
  Description: |-
    This cop checks for identical lines at the beginning or end of
    each branch of a conditional statement.
  Enabled: true
  VersionAdded: '0.36'

Style/IfInsideElse:
  Description: |-
    If the `else` branch of a conditional consists solely of an `if` node,
    it can be combined with the `else` to become an `elsif`.
    This helps to keep the nesting level from getting too deep.
  Enabled: true
  VersionAdded: '0.36'

Style/IfUnlessModifier:
  Description: |-
    Checks for if and unless statements that would fit on one line
    if written as a modifier if/unless. The maximum line length is
    configured in the `Metrics/LineLength` cop. The tab size is configured
    in the `IndentationWidth` of the `Layout/Tab` cop.
  StyleGuide: "#if-as-a-modifier"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.30'

Style/IfUnlessModifierOfIfUnless:
  Description: |-
    Checks for if and unless statements used as modifiers of other if or
    unless statements.
  Enabled: true
  VersionAdded: '0.39'

Style/IfWithSemicolon:
  Description: Checks for uses of semicolon in if statements.
  StyleGuide: "#no-semicolon-ifs"
  Enabled: true
  VersionAdded: '0.9'

Style/ImplicitRuntimeError:
  Description: |-
    This cop checks for `raise` or `fail` statements which do not specify an
    explicit exception class. (This raises a `RuntimeError`. Some projects
    might prefer to use exception classes which more precisely identify the
    nature of the error.)
  Enabled: false
  VersionAdded: '0.41'

Style/InfiniteLoop:
  Description: Use `Kernel#loop` for infinite loops.
  StyleGuide: "#infinite-loop"
  Enabled: true
  VersionAdded: '0.26'
  VersionChanged: '0.61'
  SafeAutoCorrect: true

Style/InlineComment:
  Description: This cop checks for trailing inline comments.
  Enabled: false
  VersionAdded: '0.23'

Style/InverseMethods:
  Description: |-
    This cop check for usages of not (`not` or `!`) called on a method
    when an inverse of that method can be used instead.
    Methods that can be inverted by a not (`not` or `!`) should be defined
    in `InverseMethods`
    Methods that are inverted by inverting the return
    of the block that is passed to the method should be defined in
    `InverseBlocks`
  Enabled: true
  Safe: false
  VersionAdded: '0.48'
  InverseMethods:
    :any?: :none?
    :even?: :odd?
    :==: :!=
    :=~: :!~
    :<: :>=
    :>: :<=
  InverseBlocks:
    :select: :reject
    :select!: :reject!

Style/IpAddresses:
  Description: |-
    This cop checks for hardcoded IP addresses, which can make code
    brittle. IP addresses are likely to need to be changed when code
    is deployed to a different server or environment, which may break
    a deployment if forgotten. Prefer setting IP addresses in ENV or
    other configuration.
  Enabled: false
  VersionAdded: '0.58'
  Whitelist:
  - "::"

Style/Lambda:
  Description: |-
    This cop (by default) checks for uses of the lambda literal syntax for
    single line lambdas, and the method call syntax for multiline lambdas.
    It is configurable to enforce one of the styles for both single line
    and multiline lambdas as well.
  StyleGuide: "#lambda-multi-line"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.40'
  EnforcedStyle: line_count_dependent
  SupportedStyles:
  - line_count_dependent
  - lambda
  - literal

Style/LambdaCall:
  Description: This cop checks for use of the lambda.(args) syntax.
  StyleGuide: "#proc-call"
  Enabled: true
  VersionAdded: 0.13.1
  VersionChanged: '0.14'
  EnforcedStyle: call
  SupportedStyles:
  - call
  - braces

Style/LineEndConcatenation:
  Description: |-
    This cop checks for string literal concatenation at
    the end of a line.
  Enabled: true
  SafeAutoCorrect: false
  VersionAdded: '0.18'
  VersionChanged: '0.64'

Style/MethodCallWithArgsParentheses:
  Description: |-
    This cop enforces the presence (default) or absence of parentheses in
    method calls containing parameters.
  StyleGuide: "#method-invocation-parens"
  Enabled: false
  VersionAdded: '0.47'
  VersionChanged: '0.61'
  IgnoreMacros: true
  IgnoredMethods: []
  AllowParenthesesInMultilineCall: false
  AllowParenthesesInChaining: false
  AllowParenthesesInCamelCaseMethod: false
  EnforcedStyle: require_parentheses
  SupportedStyles:
  - require_parentheses
  - omit_parentheses

Style/MethodCallWithoutArgsParentheses:
  Description: This cop checks for unwanted parentheses in parameterless method calls.
  StyleGuide: "#method-invocation-parens"
  Enabled: true
  IgnoredMethods: []
  VersionAdded: '0.47'
  VersionChanged: '0.55'

Style/MethodCalledOnDoEndBlock:
  Description: |-
    This cop checks for methods called on a do...end block. The point of
    this check is that it's easy to miss the call tacked on to the block
    when reading code.
  StyleGuide: "#single-line-blocks"
  Enabled: false
  VersionAdded: '0.14'

Style/MethodDefParentheses:
  Description: |-
    This cop checks for parentheses around the arguments in method
    definitions. Both instance and class/singleton methods are checked.
  StyleGuide: "#method-parens"
  Enabled: true
  VersionAdded: '0.16'
  VersionChanged: '0.35'
  EnforcedStyle: require_parentheses
  SupportedStyles:
  - require_parentheses
  - require_no_parentheses
  - require_no_parentheses_except_multiline

Style/MethodMissingSuper:
  Description: |-
    This cop checks for the presence of `method_missing` without
    falling back on `super`.
  StyleGuide: "#no-method-missing"
  Enabled: true
  VersionAdded: '0.56'

Style/MinMax:
  Description: This cop checks for potential uses of `Enumerable#minmax`.
  Enabled: true
  VersionAdded: '0.50'

Style/MissingElse:
  Description: Checks for `if` expressions that do not have an `else` branch.
  Enabled: false
  VersionAdded: '0.30'
  VersionChanged: '0.38'
  EnforcedStyle: both
  SupportedStyles:
  - if
  - case
  - both

Style/MissingRespondToMissing:
  Description: |-
    This cop checks for the presence of `method_missing` without also
    defining `respond_to_missing?`.
  StyleGuide: "#no-method-missing"
  Enabled: true
  VersionAdded: '0.56'

Style/MixinGrouping:
  Description: |-
    This cop checks for grouping of mixins in `class` and `module` bodies.
    By default it enforces mixins to be placed in separate declarations,
    but it can be configured to enforce grouping them in one declaration.
  StyleGuide: "#mixin-grouping"
  Enabled: true
  VersionAdded: '0.48'
  VersionChanged: '0.49'
  EnforcedStyle: separated
  SupportedStyles:
  - separated
  - grouped

Style/MixinUsage:
  Description: |-
    This cop checks that `include`, `extend` and `prepend` statements appear
    inside classes and modules, not at the top level, so as to not affect
    the behavior of `Object`.
  Enabled: true
  VersionAdded: '0.51'

Style/ModuleFunction:
  Description: |-
    This cop checks for use of `extend self` or `module_function` in a
    module.
  StyleGuide: "#module-function"
  Enabled: true
  VersionAdded: '0.11'
  VersionChanged: '0.65'
  EnforcedStyle: module_function
  SupportedStyles:
    - module_function
    - extend_self
  Autocorrect: false
  SafeAutoCorrect: false

Style/MultilineBlockChain:
  Description: |-
    This cop checks for chaining of a block after another block that spans
    multiple lines.
  StyleGuide: "#single-line-blocks"
  Enabled: true
  VersionAdded: '0.13'

Style/MultilineIfModifier:
  Description: Checks for uses of if/unless modifiers with multiple-lines bodies.
  StyleGuide: "#no-multiline-if-modifiers"
  Enabled: true
  VersionAdded: '0.45'

Style/MultilineIfThen:
  Description: Checks for uses of the `then` keyword in multi-line if statements.
  StyleGuide: "#no-then"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.26'

Style/MultilineMemoization:
  Description: This cop checks expressions wrapping styles for multiline memoization.
  Enabled: true
  VersionAdded: '0.44'
  VersionChanged: '0.48'
  EnforcedStyle: keyword
  SupportedStyles:
  - keyword
  - braces

Style/MultilineMethodSignature:
  Description: This cop checks for method signatures that span multiple lines.
  Enabled: false
  VersionAdded: '0.59'

Style/MultilineTernaryOperator:
  Description: This cop checks for multi-line ternary op expressions.
  StyleGuide: "#no-multiline-ternary"
  Enabled: true
  VersionAdded: '0.9'

Style/MultipleComparison:
  Description: |-
    This cop checks against comparing a variable with multiple items, where
    `Array#include?` could be used instead to avoid code repetition.
  Enabled: true
  VersionAdded: '0.49'

Style/MutableConstant:
  Description: |-
    This cop checks whether some constant value isn't a
    mutable literal (e.g. array or hash).
  Enabled: true
  VersionAdded: '0.34'
  VersionChanged: '0.65'
  EnforcedStyle: literals
  SupportedStyles:
    # literals: freeze literals assigned to constants
    # strict: freeze all constants
    # Strict mode is considered an experimental feature. It has not been updated
    # with an exhaustive list of all methods that will produce frozen objects so
    # there is a decent chance of getting some false positives. Luckily, there is
    # no harm in freezing an already frozen object.
    - literals
    - strict

Style/NegatedIf:
  Description: |-
    Checks for uses of if with a negated condition. Only ifs
    without else are considered. There are three different styles:
  StyleGuide: "#unless-for-negatives"
  Enabled: true
  VersionAdded: '0.20'
  VersionChanged: '0.48'
  EnforcedStyle: both
  SupportedStyles:
  - both
  - prefix
  - postfix

Style/NegatedWhile:
  Description: Checks for uses of while with a negated condition.
  StyleGuide: "#until-for-negatives"
  Enabled: true
  VersionAdded: '0.20'

Style/NestedModifier:
  Description: |-
    This cop checks for nested use of if, unless, while and until in their
    modifier form.
  StyleGuide: "#no-nested-modifiers"
  Enabled: true
  VersionAdded: '0.35'

Style/NestedParenthesizedCalls:
  Description: |-
    This cop checks for unparenthesized method calls in the argument list
    of a parenthesized method call.
  Enabled: true
  VersionAdded: '0.36'
  VersionChanged: '0.50'
  Whitelist:
  - be
  - be_a
  - be_an
  - be_between
  - be_falsey
  - be_kind_of
  - be_instance_of
  - be_truthy
  - be_within
  - eq
  - eql
  - end_with
  - include
  - match
  - raise_error
  - respond_to
  - start_with

Style/NestedTernaryOperator:
  Description: This cop checks for nested ternary op expressions.
  StyleGuide: "#no-nested-ternary"
  Enabled: true
  VersionAdded: '0.9'

Style/Next:
  Description: Use `next` to skip iteration instead of a condition at the end.
  StyleGuide: "#no-nested-conditionals"
  Enabled: true
  VersionAdded: '0.22'
  VersionChanged: '0.35'
  EnforcedStyle: skip_modifier_ifs
  MinBodyLength: 3
  SupportedStyles:
  - skip_modifier_ifs
  - always

Style/NilComparison:
  Description: |-
    This cop checks for comparison of something with nil using `==` and
    `nil?`.
  StyleGuide: "#predicate-methods"
  Enabled: true
  VersionAdded: '0.12'
  VersionChanged: '0.59'
  EnforcedStyle: predicate
  SupportedStyles:
  - predicate
  - comparison

Style/NonNilCheck:
  Description: This cop checks for non-nil checks, which are usually redundant.
  StyleGuide: "#no-non-nil-checks"
  Enabled: true
  VersionAdded: '0.20'
  VersionChanged: '0.22'
  IncludeSemanticChanges: false

Style/Not:
  Description: This cop checks for uses of the keyword `not` instead of `!`.
  StyleGuide: "#bang-not-not"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.20'

Style/NumericLiteralPrefix:
  Description: |-
    This cop checks for octal, hex, binary, and decimal literals using
    uppercase prefixes and corrects them to lowercase prefix
    or no prefix (in case of decimals).
  StyleGuide: "#numeric-literal-prefixes"
  Enabled: true
  VersionAdded: '0.41'
  EnforcedOctalStyle: zero_with_o
  SupportedOctalStyles:
  - zero_with_o
  - zero_only

Style/NumericLiterals:
  Description: |-
    This cop checks for big numeric literals without _ between groups
    of digits in them.
  StyleGuide: "#underscores-in-numerics"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.48'
  MinDigits: 5
  Strict: false

Style/NumericPredicate:
  Description: |-
    This cop checks for usage of comparison operators (`==`,
    `>`, `<`) to test numbers as zero, positive, or negative.
    These can be replaced by their respective predicate methods.
    The cop can also be configured to do the reverse.
  StyleGuide: "#predicate-methods"
  Safe: false
  SafeAutoCorrect: false
  AutoCorrect: false
  Enabled: true
  VersionAdded: '0.42'
  VersionChanged: '0.59'
  EnforcedStyle: predicate
  SupportedStyles:
  - predicate
  - comparison
  IgnoredMethods: []
  Exclude:
  - spec/**/*

Style/OneLineConditional:
  Description: |-
    TODO: Make configurable.
    Checks for uses of if/then/else/end on a single line.
  StyleGuide: "#ternary-operator"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.38'

Style/OptionHash:
  Description: |-
    This cop checks for options hashes and discourages them if the
    current Ruby version supports keyword arguments.
  Enabled: false
  VersionAdded: '0.33'
  VersionChanged: '0.34'
  SuspiciousParamNames:
  - options
  - opts
  - args
  - params
  - parameters

Style/OptionalArguments:
  Description: |-
    This cop checks for optional arguments to methods
    that do not come at the end of the argument list
  StyleGuide: "#optional-arguments"
  Enabled: true
  VersionAdded: '0.33'

Style/OrAssignment:
  Description: This cop checks for potential usage of the `||=` operator.
  StyleGuide: "#double-pipe-for-uninit"
  Enabled: true
  VersionAdded: '0.50'

Style/ParallelAssignment:
  Description: |-
    Checks for simple usages of parallel assignment.
    This will only complain when the number of variables
    being assigned matched the number of assigning variables.
  StyleGuide: "#parallel-assignment"
  Enabled: true
  VersionAdded: '0.32'

Style/ParenthesesAroundCondition:
  Description: |-
    This cop checks for the presence of superfluous parentheses around the
    condition of if/unless/while/until.
  StyleGuide: "#no-parens-around-condition"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.56'
  AllowSafeAssignment: true
  AllowInMultilineConditions: false

Style/PercentLiteralDelimiters:
  Description: This cop enforces the consistent usage of `%`-literal delimiters.
  StyleGuide: "#percent-literal-braces"
  Enabled: true
  VersionAdded: '0.19'
  PreferredDelimiters:
    default: "()"
    "%i": "[]"
    "%I": "[]"
    "%r": "{}"
    "%w": "[]"
    "%W": "[]"
  VersionChanged: 0.48.1

Style/PercentQLiterals:
  Description: This cop checks for usage of the %Q() syntax when %q() would do.
  Enabled: true
  VersionAdded: '0.25'
  EnforcedStyle: lower_case_q
  SupportedStyles:
  - lower_case_q
  - upper_case_q

Style/PerlBackrefs:
  Description: |-
    This cop looks for uses of Perl-style regexp match
    backreferences like $1, $2, etc.
  StyleGuide: "#no-perl-regexp-last-matchers"
  Enabled: true
  VersionAdded: '0.13'

Style/PreferredHashMethods:
  Description: |-
    This cop (by default) checks for uses of methods Hash#has_key? and
    Hash#has_value? where it enforces Hash#key? and Hash#value?
    It is configurable to enforce the inverse, using `verbose` method
    names also.
  StyleGuide: "#hash-key"
  Enabled: true
  VersionAdded: '0.41'
  VersionChanged: '0.44'
  EnforcedStyle: short
  SupportedStyles:
  - short
  - verbose

Style/Proc:
  Description: |-
    This cop checks for uses of Proc.new where Kernel#proc
    would be more appropriate.
  StyleGuide: "#proc"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.18'

Style/RaiseArgs:
  Description: |-
    This cop checks the args passed to `fail` and `raise`. For exploded
    style (default), it recommends passing the exception class and message
    to `raise`, rather than construct an instance of the error. It will
    still allow passing just a message, or the construction of an error
    with more than one argument.
  StyleGuide: "#exception-class-messages"
  Enabled: true
  VersionAdded: '0.14'
  VersionChanged: '0.40'
  EnforcedStyle: exploded
  SupportedStyles:
  - compact
  - exploded

Style/RandomWithOffset:
  Description: |-
    This cop checks for the use of randomly generated numbers,
    added/subtracted with integer literals, as well as those with
    Integer#succ and Integer#pred methods. Prefer using ranges instead,
    as it clearly states the intentions.
  StyleGuide: "#random-numbers"
  Enabled: true
  VersionAdded: '0.52'

Style/RedundantBegin:
  Description: This cop checks for redundant `begin` blocks.
  StyleGuide: "#begin-implicit"
  Enabled: true
  VersionAdded: '0.10'
  VersionChanged: '0.21'

Style/RedundantConditional:
  Description: This cop checks for redundant returning of true/false in conditionals.
  Enabled: true
  VersionAdded: '0.50'

Style/RedundantException:
  Description: This cop checks for RuntimeError as the argument of raise/fail.
  StyleGuide: "#no-explicit-runtimeerror"
  Enabled: true
  VersionAdded: '0.14'
  VersionChanged: '0.29'

Style/RedundantFreeze:
  Description: This cop check for uses of Object#freeze on immutable objects.
  Enabled: true
  VersionAdded: '0.34'

Style/RedundantParentheses:
  Description: This cop checks for redundant parentheses.
  Enabled: true
  VersionAdded: '0.36'

Style/RedundantReturn:
  Description: This cop checks for redundant `return` expressions.
  StyleGuide: "#no-explicit-return"
  Enabled: true
  VersionAdded: '0.10'
  VersionChanged: '0.14'
  AllowMultipleReturnValues: false

Style/RedundantSelf:
  Description: This cop checks for redundant uses of `self`.
  StyleGuide: "#no-self-unless-required"
  Enabled: true
  VersionAdded: '0.10'
  VersionChanged: '0.13'

Style/RegexpLiteral:
  Description: This cop enforces using // or %r around regular expressions.
  StyleGuide: "#percent-r"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.30'
  EnforcedStyle: slashes
  SupportedStyles:
  - slashes
  - percent_r
  - mixed
  AllowInnerSlashes: false

Style/RescueModifier:
  Description: This cop checks for uses of rescue in its modifier form.
  StyleGuide: "#no-rescue-modifiers"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.34'

Style/RescueStandardError:
  Description: |-
    This cop checks for rescuing `StandardError`. There are two supported
    styles `implicit` and `explicit`. This cop will not register an offense
    if any error other than `StandardError` is specified.
  Enabled: true
  VersionAdded: '0.52'
  EnforcedStyle: explicit
  SupportedStyles:
  - implicit
  - explicit

Style/ReturnNil:
  Description: This cop enforces consistency between 'return nil' and 'return'.
  Enabled: false
  EnforcedStyle: return
  SupportedStyles:
  - return
  - return_nil
  VersionAdded: '0.50'

Style/SafeNavigation:
  Description: |-
    This cop transforms usages of a method call safeguarded by a non `nil`
    check for the variable whose method is being called to
    safe navigation (`&.`). If there is a method chain, all of the methods
    in the chain need to be checked for safety, and all of the methods will
    need to be changed to use safe navigation. We have limited the cop to
    not register an offense for method chains that exceed 2 methods.
  Enabled: true
  VersionAdded: '0.43'
  VersionChanged: '0.56'
  ConvertCodeThatCanStartToReturnNil: false
  Whitelist:
    - present?
    - blank?
    - presence
    - try
    - try!

Style/SelfAssignment:
  Description: This cop enforces the use the shorthand for self-assignment.
  StyleGuide: "#self-assignment"
  Enabled: true
  VersionAdded: '0.19'
  VersionChanged: '0.29'

Style/Semicolon:
  Description: |-
    This cop checks for multiple expressions placed on the same line.
    It also checks for lines terminated with a semicolon.
  StyleGuide: "#no-semicolon"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.19'
  AllowAsExpressionSeparator: false

Style/Send:
  Description: This cop checks for the use of the send method.
  StyleGuide: "#prefer-public-send"
  Enabled: false
  VersionAdded: '0.33'

Style/SignalException:
  Description: This cop checks for uses of `fail` and `raise`.
  StyleGuide: "#prefer-raise-over-fail"
  Enabled: true
  VersionAdded: '0.11'
  VersionChanged: '0.37'
  EnforcedStyle: only_raise
  SupportedStyles:
  - only_raise
  - only_fail
  - semantic

Style/SingleLineBlockParams:
  Description: |-
    This cop checks whether the block parameters of a single-line
    method accepting a block match the names specified via configuration.
  Enabled: false
  VersionAdded: '0.16'
  VersionChanged: '0.47'
  Methods:
  - reduce:
    - acc
    - elem
  - inject:
    - acc
    - elem

Style/SingleLineMethods:
  Description: |-
    This cop checks for single-line method definitions that contain a body.
    It will accept single-line methods with no body.
  StyleGuide: "#no-single-line-methods"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.19'
  AllowIfMethodIsEmpty: true

Style/SpecialGlobalVars:
  Description: This cop looks for uses of Perl-style global variables.
  StyleGuide: "#no-cryptic-perlisms"
  Enabled: true
  VersionAdded: '0.13'
  VersionChanged: '0.36'
  SafeAutoCorrect: false
  EnforcedStyle: use_english_names
  SupportedStyles:
  - use_perl_names
  - use_english_names

Style/StabbyLambdaParentheses:
  Description: |-
    Check for parentheses around stabby lambda arguments.
    There are two different styles. Defaults to `require_parentheses`.
  StyleGuide: "#stabby-lambda-with-args"
  Enabled: true
  VersionAdded: '0.35'
  EnforcedStyle: require_parentheses
  SupportedStyles:
  - require_parentheses
  - require_no_parentheses

Style/StderrPuts:
  Description: |-
    This cop identifies places where `$stderr.puts` can be replaced by
    `warn`. The latter has the advantage of easily being disabled by,
    the `-W0` interpreter flag or setting `$VERBOSE` to `nil`.
  StyleGuide: "#warn"
  Enabled: true
  VersionAdded: '0.51'

Style/StringHashKeys:
  Description: |-
    This cop checks for the use of strings as keys in hashes. The use of
    symbols is preferred instead.
  StyleGuide: "#symbols-as-keys"
  Enabled: false
  VersionAdded: '0.52'

Style/StringLiterals:
  Description: Checks if uses of quotes match the configured preference.
  StyleGuide: "#consistent-string-literals"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.36'
  EnforcedStyle: single_quotes
  SupportedStyles:
  - single_quotes
  - double_quotes
  ConsistentQuotesInMultiline: false

Style/StringLiteralsInInterpolation:
  Description: |-
    This cop checks that quotes inside the string interpolation
    match the configured preference.
  Enabled: true
  VersionAdded: '0.27'
  EnforcedStyle: single_quotes
  SupportedStyles:
  - single_quotes
  - double_quotes

Style/StringMethods:
  Description: |-
    This cop enforces the use of consistent method names
    from the String class.
  Enabled: false
  VersionAdded: '0.34'
  VersionChanged: 0.34.2
  PreferredMethods:
    intern: to_sym

Style/StructInheritance:
  Description: This cop checks for inheritance from Struct.new.
  StyleGuide: "#no-extend-struct-new"
  Enabled: true
  VersionAdded: '0.29'

Style/SymbolArray:
  Description: |-
    This cop can check for array literals made up of symbols that are not
    using the %i() syntax.
  StyleGuide: "#percent-i"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.49'
  EnforcedStyle: percent
  MinSize: 2
  SupportedStyles:
  - percent
  - brackets

Style/SymbolLiteral:
  Description: This cop checks symbol literal syntax.
  Enabled: true
  VersionAdded: '0.30'

Style/SymbolProc:
  Description: Use symbols as procs when possible.
  Enabled: true
  SafeAutoCorrect: false
  VersionAdded: '0.26'
  VersionChanged: '0.64'
  # A list of method names to be ignored by the check.
  # The names should be fairly unique, otherwise you'll end up ignoring lots of code.
  IgnoredMethods:
  - respond_to
  - define_method

Style/TernaryParentheses:
  Description: |-
    This cop checks for the presence of parentheses around ternary
    conditions. It is configurable to enforce inclusion or omission of
    parentheses using `EnforcedStyle`. Omission is only enforced when
    removing the parentheses won't cause a different behavior.
  Enabled: true
  VersionAdded: '0.42'
  VersionChanged: '0.46'
  EnforcedStyle: require_no_parentheses
  SupportedStyles:
  - require_parentheses
  - require_no_parentheses
  - require_parentheses_when_complex
  AllowSafeAssignment: true

Style/TrailingBodyOnClass:
  Description: This cop checks for trailing code after the class definition.
  Enabled: true
  VersionAdded: '0.53'

Style/TrailingBodyOnMethodDefinition:
  Description: This cop checks for trailing code after the method definition.
  Enabled: true
  VersionAdded: '0.52'

Style/TrailingBodyOnModule:
  Description: This cop checks for trailing code after the module definition.
  Enabled: true
  VersionAdded: '0.53'

Style/TrailingCommaInArguments:
  Description: This cop checks for trailing comma in argument lists.
  StyleGuide: "#no-trailing-params-comma"
  Enabled: true
  VersionAdded: '0.36'
  EnforcedStyleForMultiline: no_comma
  SupportedStylesForMultiline:
  - comma
  - consistent_comma
  - no_comma

Style/TrailingCommaInArrayLiteral:
  Description: This cop checks for trailing comma in array literals.
  StyleGuide: "#no-trailing-array-commas"
  Enabled: true
  VersionAdded: '0.53'
  EnforcedStyleForMultiline: no_comma
  SupportedStylesForMultiline:
  - comma
  - consistent_comma
  - no_comma

Style/TrailingCommaInHashLiteral:
  Description: This cop checks for trailing comma in hash literals.
  Enabled: true
  EnforcedStyleForMultiline: no_comma
  SupportedStylesForMultiline:
  - comma
  - consistent_comma
  - no_comma
  VersionAdded: '0.53'

Style/TrailingMethodEndStatement:
  Description: This cop checks for trailing code after the method definition.
  Enabled: true
  VersionAdded: '0.52'

Style/TrailingUnderscoreVariable:
  Description: This cop checks for extra underscores in variable assignment.
  AllowNamedUnderscoreVariables: true
  Enabled: true
  VersionAdded: '0.31'
  VersionChanged: '0.35'

Style/TrivialAccessors:
  Description: |-
    This cop looks for trivial reader/writer methods, that could
    have been created with the attr_* family of functions automatically.
  StyleGuide: "#attr_family"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.38'
  ExactNameMatch: true
  AllowPredicates: true
  AllowDSLWriters: false
  IgnoreClassMethods: false
  Whitelist:
  - to_ary
  - to_a
  - to_c
  - to_enum
  - to_h
  - to_hash
  - to_i
  - to_int
  - to_io
  - to_open
  - to_path
  - to_proc
  - to_r
  - to_regexp
  - to_str
  - to_s
  - to_sym

Style/UnlessElse:
  Description: This cop looks for *unless* expressions with *else* clauses.
  StyleGuide: "#no-else-with-unless"
  Enabled: true
  VersionAdded: '0.9'

Style/UnneededCapitalW:
  Description: This cop checks for usage of the %W() syntax when %w() would do.
  Enabled: true
  VersionAdded: '0.21'
  VersionChanged: '0.24'

Style/UnneededCondition:
  Description: This cop checks for unnecessary conditional expressions.
  Enabled: true
  VersionAdded: '0.57'

Style/UnneededInterpolation:
  Description: This cop checks for strings that are just an interpolated expression.
  Enabled: true
  VersionAdded: '0.36'

Style/UnneededPercentQ:
  Description: This cop checks for usage of the %q/%Q syntax when '' or "" would do.
  StyleGuide: "#percent-q"
  Enabled: true
  VersionAdded: '0.24'

Style/UnpackFirst:
  Description: |-
    This cop checks for accessing the first element of `String#unpack`
    which can be replaced with the shorter method `unpack1`.
  Enabled: true
  VersionAdded: '0.54'

Style/VariableInterpolation:
  Description: This cop checks for variable interpolation (like "#@ivar").
  StyleGuide: "#curlies-interpolate"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.20'

Style/WhenThen:
  Description: This cop checks for *when;* uses in *case* expressions.
  StyleGuide: "#one-line-cases"
  Enabled: true
  VersionAdded: '0.9'

Style/WhileUntilDo:
  Description: Checks for uses of `do` in multi-line `while/until` statements.
  StyleGuide: "#no-multiline-while-do"
  Enabled: true
  VersionAdded: '0.9'

Style/WhileUntilModifier:
  Description: |-
    Checks for while and until statements that would fit on one line
    if written as a modifier while/until. The maximum line length is
    configured in the `Metrics/LineLength` cop.
  StyleGuide: "#while-as-a-modifier"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.30'

Style/WordArray:
  Description: |-
    This cop can check for array literals made up of word-like
    strings, that are not using the %w() syntax.
  StyleGuide: "#percent-w"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.36'
  EnforcedStyle: percent
  SupportedStyles:
  - percent
  - brackets
  MinSize: 2
  WordRegex: !ruby/regexp /\A[\p{Word}\n\t]+\z/

Style/YodaCondition:
  Description: 'Forbid or enforce yoda conditions.'
  Reference: 'https://en.wikipedia.org/wiki/Yoda_conditions'
  Enabled: true
  EnforcedStyle: forbid_for_all_comparison_operators
  SupportedStyles:
    # check all comparison operators
    - forbid_for_all_comparison_operators
    # check only equality operators: `!=` and `==`
    - forbid_for_equality_operators_only
    # enforce yoda for all comparison operators
    - require_for_all_comparison_operators
    # enforce yoda only for equality operators: `!=` and `==`
    - require_for_equality_operators_only
  VersionAdded: '0.49'
  VersionChanged: '0.63'

Style/ZeroLengthPredicate:
  Description: |-
    This cop checks for numeric comparisons that can be replaced
    by a predicate method, such as receiver.length == 0,
    receiver.length > 0, receiver.length != 0,
    receiver.length < 1 and receiver.size == 0 that can be
    replaced by receiver.empty? and !receiver.empty.
  Enabled: true
  Safe: false
  VersionAdded: '0.37'
  VersionChanged: '0.39'
