version: 2

steps: &steps
  steps:
    - checkout
    - run: bundle install
    - run: bash .travis.sh

jruby_env: &jruby_env
  # By default we have 2 CPUs and 4GB ram available
  # https://circleci.com/docs/2.0/configuration-reference/#resource_class
  JRUBY_OPTS: "--debug -J-Xmn1024m -J-Xms2048m -J-Xmx2048m"

common_env: &common_env
  # CircleCI container has two cores, but Ruby can see 32 cores. So we
  # configure test-queue.
  # See https://github.com/tmm1/test-queue#environment-variables
  TEST_QUEUE_WORKERS: 2

spec_env: &spec_env
  environment:
    TASK: "spec"
    <<: *common_env

ascii_spec_env: &ascii_spec_env
  environment:
    TASK: "ascii_spec"
    <<: *common_env

rubocop_env: &rubocop_env
  environment:
    TASK: "internal_investigation"
    <<: *common_env

jobs:

  # Ruby 2.2
  ruby-2.2-spec:
    docker:
      - image: circleci/ruby:2.2
    <<: *spec_env
    <<: *steps
  ruby-2.2-ascii_spec:
    docker:
      - image: circleci/ruby:2.2
    <<: *ascii_spec_env
    <<: *steps
  ruby-2.2-rubocop:
    docker:
      - image: circleci/ruby:2.2
    <<: *rubocop_env
    <<: *steps

  # Ruby 2.3
  ruby-2.3-spec:
    docker:
      - image: circleci/ruby:2.3
    <<: *spec_env
    <<: *steps
  ruby-2.3-ascii_spec:
    docker:
      - image: circleci/ruby:2.3
    <<: *ascii_spec_env
    <<: *steps
  ruby-2.3-rubocop:
    docker:
      - image: circleci/ruby:2.3
    <<: *rubocop_env
    <<: *steps

  # Ruby 2.4
  ruby-2.4-spec:
    docker:
      - image: circleci/ruby:2.4
    <<: *spec_env
    <<: *steps
  ruby-2.4-ascii_spec:
    docker:
      - image: circleci/ruby:2.4
    <<: *ascii_spec_env
    <<: *steps
  ruby-2.4-rubocop:
    docker:
      - image: circleci/ruby:2.4
    <<: *rubocop_env
    <<: *steps

  # Ruby 2.5
  ruby-2.5-spec:
    docker:
      - image: circleci/ruby:2.5
    <<: *spec_env
    <<: *steps
  ruby-2.5-ascii_spec:
    docker:
      - image: circleci/ruby:2.5
    <<: *ascii_spec_env
    <<: *steps
  ruby-2.5-rubocop:
    docker:
      - image: circleci/ruby:2.5
    <<: *rubocop_env
    <<: *steps

  # JRuby 9.2
  jruby-9.2-spec:
    docker:
      - image: circleci/jruby:9.2
        environment:
          <<: *jruby_env
    <<: *spec_env
    <<: *steps
  jruby-9.2-ascii_spec:
    docker:
      - image: circleci/jruby:9.2
        environment:
          <<: *jruby_env
    <<: *ascii_spec_env
    <<: *steps
  jruby-9.2-rubocop:
    docker:
      - image: circleci/jruby:9.2
        environment:
          <<: *jruby_env
    <<: *rubocop_env
    <<: *steps

  code-climate:
    docker:
      - image: circleci/ruby:2.5
    environment:
      CC_TEST_REPORTER_ID: a11b66bfbb1acdf220d5cb317b2e945a986fd85adebe29a76d411ad6d74ec31f
    steps:
      - checkout
      - run: bundle install
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run specs
          command: |
            ./cc-test-reporter before-build
            rake report_coverage
            ./cc-test-reporter after-build --exit-code $?

workflows:
  version: 2
  build:
    jobs:
      - ruby-2.2-spec
      - ruby-2.2-ascii_spec
      - ruby-2.2-rubocop
      - ruby-2.3-spec
      - ruby-2.3-ascii_spec
      - ruby-2.3-rubocop
      - ruby-2.4-spec
      - ruby-2.4-ascii_spec
      - ruby-2.4-rubocop
      - ruby-2.5-spec
      - ruby-2.5-ascii_spec
      - ruby-2.5-rubocop
      - jruby-9.2-spec
      - jruby-9.2-ascii_spec
      - jruby-9.2-rubocop
      - code-climate
